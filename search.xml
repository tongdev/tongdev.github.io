<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[my first blog]]></title>
    <url>%2Fmy-first-blog%2F</url>
    <content type="text"><![CDATA[This is my first blog.Hello, everyone! This is my first blog! java 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798/** * Hibernate 的其他 API * @author Tong * */public class HibernateDemo5 &#123; @Test // Query public void demo1() &#123; Session session = HibernateUtils.getCurrentSession(); Transaction tx = session.beginTransaction(); // 简单查询/查询所有 // 通过 Session 获得 Query 接口，HQL：hibernate query language /* String hql = "from Customer"; Query query = session.createQuery(hql);*/ // 条件查询 /*String hql = "from Customer where cust_name like ?"; Query query = session.createQuery(hql); // 设置条件 query.setParameter(0, "张%"); // 在 hibernate 中 0 代表第一个问号*/ // 分页查询 String hql = "from Customer"; Query query = session.createQuery(hql); // 设置分页 query.setFirstResult(0); // 从第一条数据开始 query.setMaxResults(3); // 每页显示 3 条数据 List&lt;Customer&gt; list = query.list(); for (Customer customer : list) &#123; System.out.println(customer); &#125; tx.commit(); &#125; @Test // Criteria public void demo2() &#123; Session session = HibernateUtils.getCurrentSession(); Transaction tx = session.beginTransaction(); // 通过 Session 获得 Criteria 接口 Criteria criteria = session.createCriteria(Customer.class); // 简单查询/查询所有 // List&lt;Customer&gt; list = criteria.list(); // 条件查询 /*criteria.add(Restrictions.like("cust_name", "张", MatchMode.START)); // 匹配名字开头是张的数据 List&lt;Customer&gt; list = criteria.list();*/ // 分页查询 criteria.setFirstResult(3); criteria.setMaxResults(3); List&lt;Customer&gt; list = criteria.list(); for (Customer customer : list) &#123; System.out.println(customer); &#125; tx.commit(); &#125; @Test // SQLQuery public void demo3() &#123; Session session = HibernateUtils.getCurrentSession(); Transaction tx = session.beginTransaction(); // 简单查询/查询所有 /*String sql = "select * from cst_customer"; SQLQuery query = session.createSQLQuery(sql);*/ // 条件查询 /*String sql = "select * from cst_customer where cust_name=?"; SQLQuery query = session.createSQLQuery(sql); // 设置条件 query.setParameter(0, "哈哈");*/ // 分页查询 String sql = "select * from cst_customer limit ?, ?"; SQLQuery query = session.createSQLQuery(sql); // 设置分页 query.setParameter(0, 3); query.setParameter(1, 3); List&lt;Object[]&gt; list = query.list(); for (Object[] objects : list) &#123; System.out.println(Arrays.toString(objects)); &#125; tx.commit(); &#125; &#125;]]></content>
      <categories>
        <category>Thinking</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>Hexo</tag>
        <tag>testHexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Helloworld]]></title>
    <url>%2FHelloworld%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
