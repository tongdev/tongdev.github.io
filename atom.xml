<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hellotong</title>
  <icon>https://www.gravatar.com/avatar/48dc4539567cef376fc850a6961ee097</icon>
  <subtitle>Hello tong, hello world!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="hellotong.ml/"/>
  <updated>2018-11-25T13:59:38.273Z</updated>
  <id>hellotong.ml/</id>
  
  <author>
    <name>Tong</name>
    <email>1336572985@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hibernate (四)</title>
    <link href="hellotong.ml/hibernate04/"/>
    <id>hellotong.ml/hibernate04/</id>
    <published>2018-11-25T13:48:14.110Z</published>
    <updated>2018-11-25T13:59:38.273Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hibernate-的查询方式"><a href="#Hibernate-的查询方式" class="headerlink" title="Hibernate 的查询方式"></a>Hibernate 的查询方式</h2><blockquote><p>Hibernate 共提供了五种查询方式。</p></blockquote><h3 id="OID-查询"><a href="#OID-查询" class="headerlink" title="OID 查询"></a>OID 查询</h3><h4 id="使用-get-方法"><a href="#使用-get-方法" class="headerlink" title="使用 get 方法"></a>使用 get 方法</h4><p><code>Customer customer = session.get(Customer.class, 1l);</code></p><h4 id="使用-load-方法"><a href="#使用-load-方法" class="headerlink" title="使用 load 方法"></a>使用 load 方法</h4><p><code>Customer customer = session.load(Customer.class, 1l);</code></p><h3 id="对象导航查询"><a href="#对象导航查询" class="headerlink" title="对象导航查询"></a>对象导航查询</h3><p>对象导航查询是 Hibernate 根据一个已经查询到的对象获得其关联的对象的一种查询方式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过客户获取联系人</span></span><br><span class="line">Customer customer = session.get(Customer.class, <span class="number">1l</span>);<span class="comment">// 查询 1 号客户</span></span><br><span class="line">Set&lt;LinkMan&gt; linkMans = customer.getLinkMans();<span class="comment">// 获得 1 号客户的所有的联系人的集合</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//通过联系人获取客户</span></span><br><span class="line">LinkMan linkMan = session.get(LinkMan.class, <span class="number">1l</span>);<span class="comment">// 查询 1 号联系人</span></span><br><span class="line">Customer customer = linkMan.getCustomer();<span class="comment">// 查询 1 号联系人所属的客户</span></span><br></pre></td></tr></table></figure><h3 id="HQL-检索"><a href="#HQL-检索" class="headerlink" title="HQL 检索"></a>HQL 检索</h3><p>HQL（Hibernate Query Language）查询，是一种面向对象的查询语言，语法类似于 SQL，通过 <code>session.createQuery()</code>    接收一个 HQL 语句来进行查询。</p><h4 id="HQL-的简单查询"><a href="#HQL-的简单查询" class="headerlink" title="HQL 的简单查询"></a>HQL 的简单查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HQL 的简单查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// HQL 的简单查询</span></span><br><span class="line">    Query query = session.createQuery(<span class="string">"from Customer"</span>);</span><br><span class="line">    List&lt;Customer&gt; list = query.list();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// SQL 中支持 * 号的写法，但 HQL 中不支持</span></span><br><span class="line">    <span class="comment">/*Query query = session.createQuery("select * from Customer");</span></span><br><span class="line"><span class="comment">List&lt;Customer&gt; list = query.list();// 报错   */</span></span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HQL-的别名查询"><a href="#HQL-的别名查询" class="headerlink" title="HQL 的别名查询"></a>HQL 的别名查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HQL 的别名查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    Query query = session.createQuery(<span class="string">"from Customer c"</span>);</span><br><span class="line">    List&lt;Customer&gt; list = query.list();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Query query = session.createQuery("select c from Customer c");</span></span><br><span class="line"><span class="comment">List&lt;Customer&gt; list = query.list();*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HQL-的排序查询"><a href="#HQL-的排序查询" class="headerlink" title="HQL 的排序查询"></a>HQL 的排序查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HQL 的排序查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 排序查询</span></span><br><span class="line">    <span class="comment">// 默认是升序的：order by ~ asc</span></span><br><span class="line">    <span class="comment">/*Query query = session.createQuery("from Customer order by cust_id");</span></span><br><span class="line"><span class="comment">List&lt;Customer&gt; list = query.list();*/</span></span><br><span class="line">    <span class="comment">// 设置降序排序：order by ~ desc</span></span><br><span class="line">    Query query = session.createQuery(<span class="string">"from Customer order by cust_id desc"</span>);</span><br><span class="line">    List&lt;Customer&gt; list = query.list();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HQL-的条件查询"><a href="#HQL-的条件查询" class="headerlink" title="HQL 的条件查询"></a>HQL 的条件查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* HQL 的条件查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 条件查询，可分为两种</span></span><br><span class="line">    <span class="comment">// 1. 按位置绑定</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个条件的查询</span></span><br><span class="line">    <span class="comment">/* Query query = session.createQuery("from Customer where cust_name = ?");</span></span><br><span class="line"><span class="comment">// 设置条件</span></span><br><span class="line"><span class="comment">query.setParameter(0, "张三");*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多个条件的查询</span></span><br><span class="line">    <span class="comment">/*Query query = session.createQuery("from Customer where cust_name like ? and cust_source = ?");</span></span><br><span class="line"><span class="comment">// 设置条件</span></span><br><span class="line"><span class="comment">query.setParameter(0, "李%");</span></span><br><span class="line"><span class="comment">query.setParameter(1, "朋友推荐");*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 按名称绑定</span></span><br><span class="line">    Query query = session.createQuery(<span class="string">"from Customer where cust_name like :aaa and cust_source = :bbb"</span>);</span><br><span class="line">    query.setParameter(<span class="string">"aaa"</span>, <span class="string">"李%"</span>);</span><br><span class="line">    query.setParameter(<span class="string">"bbb"</span>, <span class="string">"朋友推荐"</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;Customer&gt; list = query.list();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HQL-的投影查询"><a href="#HQL-的投影查询" class="headerlink" title="HQL 的投影查询"></a>HQL 的投影查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HQL 的投影查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 投影查询</span></span><br><span class="line">    <span class="comment">// 单个属性的查询</span></span><br><span class="line">    <span class="comment">/*Query query = session.createQuery("select c.cust_name from Customer c");</span></span><br><span class="line"><span class="comment">List&lt;Object&gt; list = query.list();</span></span><br><span class="line"><span class="comment">for (Object object : list) &#123;</span></span><br><span class="line"><span class="comment">System.out.println(object);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多个属性的查询</span></span><br><span class="line">    <span class="comment">/*Query query = session.createQuery("select c.cust_name,c.cust_source from Customer c");</span></span><br><span class="line"><span class="comment">List&lt;Object[]&gt; list = query.list();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">for (Object[] objects : list) &#123;</span></span><br><span class="line"><span class="comment">System.out.println(Arrays.toString(objects));</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多个属性的查询，并将其每一条查询结果封装到一个对象中</span></span><br><span class="line">    Query query = session.createQuery(<span class="string">"select new Customer(cust_name, cust_source) from Customer"</span>);</span><br><span class="line">    List&lt;Object&gt; list = query.list();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Object object : list) &#123;</span><br><span class="line">        System.out.println(object);</span><br><span class="line">    &#125;</span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HQL-的分页查询"><a href="#HQL-的分页查询" class="headerlink" title="HQL 的分页查询"></a>HQL 的分页查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo7</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    Query query = session.createQuery(<span class="string">"from LinkMan"</span>);</span><br><span class="line">    <span class="comment">// 设置分页的参数</span></span><br><span class="line">    <span class="comment">// 设置从第几条开始</span></span><br><span class="line">    query.setFirstResult(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 设置每页显示几条</span></span><br><span class="line">    query.setMaxResults(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;LinkMan&gt; list = query.list();</span><br><span class="line">    <span class="keyword">for</span> (LinkMan linkMan : list) &#123;</span><br><span class="line">        System.out.println(linkMan);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HQL-的分组统计查询"><a href="#HQL-的分组统计查询" class="headerlink" title="HQL 的分组统计查询"></a>HQL 的分组统计查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HQL 聚合函数使用以及分组统计查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo8</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聚合函数的使用</span></span><br><span class="line">    Object object = session.createQuery(<span class="string">"select count(*) from Customer"</span>).uniqueResult();</span><br><span class="line">    System.out.println(object);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分组统计查询</span></span><br><span class="line">    List&lt;Object[]&gt; list = session.createQuery(<span class="string">"select cust_name,count(*) from Customer group by cust_source having count(*) &gt;= 2"</span>).list();</span><br><span class="line">    <span class="keyword">for</span> (Object[] objects : list) &#123;</span><br><span class="line">        System.out.println(Arrays.toString(objects));</span><br><span class="line">    &#125;</span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HQL-的多表查询"><a href="#HQL-的多表查询" class="headerlink" title="HQL 的多表查询"></a>HQL 的多表查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HQL 的多表查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo9</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 内连接</span></span><br><span class="line">    <span class="comment">/*List&lt;Object[]&gt; list = session.createQuery("from Customer c inner join c.linkMans").list();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">for (Object[] objects : list) &#123;</span></span><br><span class="line"><span class="comment">System.out.println(Arrays.toString(objects));</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 迫切内连接fetch 的作用就是通知 Hibernate 将另一个对象的数据封装到该对象中</span></span><br><span class="line">    List&lt;Customer&gt; list = session.createQuery(<span class="string">"select distinct c from Customer c inner join fetch c.linkMans"</span>).list();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="QBC-检索"><a href="#QBC-检索" class="headerlink" title="QBC 检索"></a>QBC 检索</h3><p>QBC（Query By Criteria）查询，是一种更加面向对象化的查询方式。</p><h4 id="QBC-的简单查询"><a href="#QBC-的简单查询" class="headerlink" title="QBC 的简单查询"></a>QBC 的简单查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 简单查询</span></span><br><span class="line">    Criteria criteria = session.createCriteria(Customer.class);</span><br><span class="line">    List&lt;Customer&gt; list = criteria.list();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="QBC-的排序查询"><a href="#QBC-的排序查询" class="headerlink" title="QBC 的排序查询"></a>QBC 的排序查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 排序查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 排序查询</span></span><br><span class="line">    Criteria criteria = session.createCriteria(Customer.class);</span><br><span class="line">    <span class="comment">// 设置排序 </span></span><br><span class="line">    <span class="comment">// asc 为升序，按照 cust_id 升序排序</span></span><br><span class="line">    <span class="comment">//criteria.addOrder(Order.asc("cust_id"));</span></span><br><span class="line">    <span class="comment">// desc 为降序，按照 cust_id 降序排序</span></span><br><span class="line">    criteria.addOrder(Order.desc(<span class="string">"cust_id"</span>));</span><br><span class="line">    List&lt;Customer&gt; list = criteria.list();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="QBC-的分页查询"><a href="#QBC-的分页查询" class="headerlink" title="QBC 的分页查询"></a>QBC 的分页查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    Criteria criteria = session.createCriteria(LinkMan.class);</span><br><span class="line">    <span class="comment">// 设置分页参数</span></span><br><span class="line">    <span class="comment">// 从第几条数据开始</span></span><br><span class="line">    criteria.setFirstResult(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 每页显示几条数据</span></span><br><span class="line">    criteria.setMaxResults(<span class="number">10</span>);</span><br><span class="line">    List&lt;LinkMan&gt; list = criteria.list();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (LinkMan linkMan : list) &#123;</span><br><span class="line">        System.out.println(linkMan);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="QBC-的条件查询"><a href="#QBC-的条件查询" class="headerlink" title="QBC 的条件查询"></a>QBC 的条件查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 条件查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 条件查询</span></span><br><span class="line">    Criteria criteria = session.createCriteria(Customer.class);</span><br><span class="line">    <span class="comment">// 设置条件</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * =eq</span></span><br><span class="line"><span class="comment"> * &gt;gt</span></span><br><span class="line"><span class="comment"> * &gt;=ge</span></span><br><span class="line"><span class="comment"> * &lt;lt</span></span><br><span class="line"><span class="comment"> * &lt;=le</span></span><br><span class="line"><span class="comment"> * &lt;&gt;ne</span></span><br><span class="line"><span class="comment"> * like模糊匹配</span></span><br><span class="line"><span class="comment"> * in 包含</span></span><br><span class="line"><span class="comment"> * and以及</span></span><br><span class="line"><span class="comment"> * or或者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="comment">// 查询来源是：广告、姓：张  的 记录</span></span><br><span class="line">    criteria.add(Restrictions.eq(<span class="string">"cust_source"</span>, <span class="string">"广告"</span>));</span><br><span class="line">    criteria.add(Restrictions.like(<span class="string">"cust_name"</span>, <span class="string">"张%"</span>));</span><br><span class="line"></span><br><span class="line">    List&lt;Customer&gt; list = criteria.list();</span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="QBC-的统计查询"><a href="#QBC-的统计查询" class="headerlink" title="QBC 的统计查询"></a>QBC 的统计查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统计查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 统计查询</span></span><br><span class="line">    Criteria criteria = session.createCriteria(Customer.class);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * add: 普通条件</span></span><br><span class="line"><span class="comment"> * addOrder: 排序条件</span></span><br><span class="line"><span class="comment"> * setProjection: 聚合函数条件 和 group by having 条件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    Long num = (Long) criteria.setProjection(Projections.rowCount()).uniqueResult();</span><br><span class="line"></span><br><span class="line">    System.out.println(num);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="QBC-的离线条件查询"><a href="#QBC-的离线条件查询" class="headerlink" title="QBC 的离线条件查询"></a>QBC 的离线条件查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 离线条件查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// web 层 需要做的</span></span><br><span class="line">    DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Customer.class);</span><br><span class="line">    detachedCriteria.add(Restrictions.like(<span class="string">"cust_name"</span>, <span class="string">"李%"</span>));</span><br><span class="line"></span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 离线查询对象与 Session 绑定</span></span><br><span class="line">    Criteria criteria = detachedCriteria.getExecutableCriteria(session);</span><br><span class="line">    List&lt;Customer&gt; list = criteria.list();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Hibernate-的抓取策略（优化）"><a href="#Hibernate-的抓取策略（优化）" class="headerlink" title="Hibernate 的抓取策略（优化）"></a>Hibernate 的抓取策略（优化）</h2><h3 id="延迟加载"><a href="#延迟加载" class="headerlink" title="延迟加载"></a>延迟加载</h3><h4 id="什么是延迟加载"><a href="#什么是延迟加载" class="headerlink" title="什么是延迟加载"></a>什么是延迟加载</h4><p>延迟加载即 lazy（懒加载）。执行到该行代码时，不会马上发送 SQL 语句去查询，而是在真正的使用这个对象的时候才会去发送 SQL 语句去查询。</p><h4 id="延迟加载的分类"><a href="#延迟加载的分类" class="headerlink" title="延迟加载的分类"></a>延迟加载的分类</h4><h5 id="类级别的延迟加载"><a href="#类级别的延迟加载" class="headerlink" title="类级别的延迟加载"></a>类级别的延迟加载</h5><p>类级别的延迟加载指的是通过 load 方法查询某个对象的时候，是否采用延迟。它是通过在 <code>&lt;class&gt;</code> 标签上的 lazy 进行配置，如果要让 lazy 失效，可以采用以下几种方式：</p><ol><li>将 lazy 设置为 false</li><li>将持久化类使用 final 修改，不可继承</li><li>使用 Hibernate.initialize() 方法</li></ol><h5 id="关联级别的延迟加载"><a href="#关联级别的延迟加载" class="headerlink" title="关联级别的延迟加载"></a>关联级别的延迟加载</h5><p>关联级别的延迟加载指的是在查询到某个对象的时候，同时查询其关联对象的时候，是否采用延迟加载。</p><h3 id="抓取策略"><a href="#抓取策略" class="headerlink" title="抓取策略"></a>抓取策略</h3><blockquote><p>抓取策略往往会和关联级别的延迟加载一起使用来优化语句。</p></blockquote><h4 id="抓取策略的概述"><a href="#抓取策略的概述" class="headerlink" title="抓取策略的概述"></a>抓取策略的概述</h4><p>通过一个对象抓取其关联对象时需要发送 SQL 语句，如何发送 SQL 语句，以什么样的格式发送，是可以通过策略去配置的，即可以通过 <code>&lt;set&gt;</code> 标签和 <code>&lt;many-to-one&gt;</code> 标签上的 fetch 和 lazy 属性进行设置。</p><h4 id="lt-set-gt-标签上的-fetch-和-lazy-的配置"><a href="#lt-set-gt-标签上的-fetch-和-lazy-的配置" class="headerlink" title="&lt;set&gt; 标签上的 fetch 和 lazy 的配置"></a><code>&lt;set&gt;</code> 标签上的 fetch 和 lazy 的配置</h4><ul><li><p>fetch：即抓取策略，控制发送 SQL 语句的格式</p><p>取值：</p><ul><li>select ：默认值，发送普通的 select 语句查询关联对象</li><li>join ：发送一条迫切左外连接查询关联对象</li><li>subselect ：发送一条子查询查询其关联对象</li></ul></li><li><p>lazy：即延迟加载，控制查询关联对象时是否采用延迟</p><p>取值：</p><ul><li>true     ：默认值，采用延迟加载</li><li>false ：不采用延迟加载</li><li>extra ：采用延迟加载，比 true 更懒 </li></ul></li></ul><h4 id="lt-many-to-one-gt-标签上的-fetch-和-lazy-的配置"><a href="#lt-many-to-one-gt-标签上的-fetch-和-lazy-的配置" class="headerlink" title="&lt;many-to-one&gt; 标签上的 fetch 和 lazy 的配置"></a><code>&lt;many-to-one&gt;</code> 标签上的 fetch 和 lazy 的配置</h4><ul><li><p>fetch：即抓取策略，控制发送 SQL 语句的格式</p><p>取值：</p><ul><li>select ：默认值，发送普通的 SQL 语句查询关联对象</li><li>join：发送一条迫切左外连接 SQL 语句               </li></ul></li><li><p>lazy：即延迟加载，控制查询关联对象时是否采用延迟</p><p>取值：</p><ul><li>proxy ：默认值，proxy 具体的取值取决于关联对方的 <code>&lt;class&gt;</code> 标签上的 lazy 的取值</li><li>false：不采用延迟加载</li><li>no-proxy：该取值不用</li></ul></li></ul><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>在实际开发过程中，一般都采用默认值，如果有特殊需要，可能会用到配置 join。但是面试会问抓取策略的优化。</p><h3 id="批量抓取"><a href="#批量抓取" class="headerlink" title="批量抓取"></a>批量抓取</h3><p>抓取一批关联对象，默认只会抓取一个，可以通过在<code>&lt;set&gt;</code>标签和<code>&lt;class&gt;</code>标签上通过<code>batch-size</code>属性来设置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.hibernate.demo2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.test.hibernate.domain.Customer;</span><br><span class="line"><span class="keyword">import</span> com.test.hibernate.domain.LinkMan;</span><br><span class="line"><span class="keyword">import</span> com.test.hibernate.utils.HibernateUtils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量抓取的测试类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tong</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HibernateDemo3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取客户的时候，批量抓取联系人</span></span><br><span class="line"><span class="comment"> * 需要在客户的配置文件中的 &lt;set&gt; 上配置 batch-size 属性，默认值为 1，即每次抓取一个</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询所有客户</span></span><br><span class="line">List&lt;Customer&gt; list = session.createQuery(<span class="string">"from Customer"</span>).list();</span><br><span class="line"><span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">System.out.println(customer.getCust_name());</span><br><span class="line"><span class="comment">// 查看每个客户的所有联系人</span></span><br><span class="line"><span class="keyword">for</span> (LinkMan linkMan : customer.getLinkMans()) &#123;</span><br><span class="line">System.out.println(linkMan.getLkm_name());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tx.commit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取联系人的时候，批量抓取客户</span></span><br><span class="line"><span class="comment"> * 需要在客户的配置文件中的 &lt;class&gt; 上配置 batch-size 属性，默认值为 1，即每次抓取一个</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询所有的联系人</span></span><br><span class="line">List&lt;LinkMan&gt; list = session.createQuery(<span class="string">"from LinkMan"</span>).list();</span><br><span class="line"><span class="keyword">for</span> (LinkMan linkMan : list) &#123;</span><br><span class="line">System.out.println(linkMan.getLkm_name());</span><br><span class="line">System.out.println(linkMan.getCustomer().getCust_name());</span><br><span class="line">&#125;</span><br><span class="line">tx.commit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Hibernate 基础完结篇（四），我们一起学习 Hibernate。
    
    </summary>
    
      <category term="Java" scheme="hellotong.ml/categories/Java/"/>
    
    
      <category term="Java" scheme="hellotong.ml/tags/Java/"/>
    
      <category term="Hibernate" scheme="hellotong.ml/tags/Hibernate/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate (三)</title>
    <link href="hellotong.ml/hibernate03/"/>
    <id>hellotong.ml/hibernate03/</id>
    <published>2018-11-23T13:28:32.432Z</published>
    <updated>2018-11-25T13:49:29.896Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库表与表之间的关系"><a href="#数据库表与表之间的关系" class="headerlink" title="数据库表与表之间的关系"></a>数据库表与表之间的关系</h2><h3 id="一对多的关系"><a href="#一对多的关系" class="headerlink" title="一对多的关系"></a>一对多的关系</h3><h4 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h4><p>一个部门可以有多名员工，但一个员工只能隶属于一个部门。</p><h4 id="建表原则"><a href="#建表原则" class="headerlink" title="建表原则"></a>建表原则</h4><p>在多的一方创建外键指向一的一方的主键。</p><h3 id="多对多关系"><a href="#多对多关系" class="headerlink" title="多对多关系"></a>多对多关系</h3><h4 id="举例说明-1"><a href="#举例说明-1" class="headerlink" title="举例说明"></a>举例说明</h4><p>一个学生可以选修多门课程，同时一门课程也可以被多名学生选修。</p><h4 id="建表原则-1"><a href="#建表原则-1" class="headerlink" title="建表原则"></a>建表原则</h4><p>创建一个中间表，中间表至少有两个字段分别作为外键指向多对多双方的主键。</p><h3 id="一对一关系"><a href="#一对一关系" class="headerlink" title="一对一关系"></a>一对一关系</h3><h4 id="举例说明-2"><a href="#举例说明-2" class="headerlink" title="举例说明"></a>举例说明</h4><p>一个人只能对应一个身份证号，一个身份证号也只能归属于一个人。</p><h4 id="建表原则-2"><a href="#建表原则-2" class="headerlink" title="建表原则"></a>建表原则</h4><ol><li>唯一外键对应。假设把一对一关系看成是一对多关系，在多的一方建立唯一外键指向一的一方的主键。</li><li>主键对应。两个表的主键相同。</li></ol><h2 id="Hibernate-的一对多关系的关联映射"><a href="#Hibernate-的一对多关系的关联映射" class="headerlink" title="Hibernate 的一对多关系的关联映射"></a>Hibernate 的一对多关系的关联映射</h2><h3 id="Hibernate-的一对多的关系的配置"><a href="#Hibernate-的一对多的关系的配置" class="headerlink" title="Hibernate 的一对多的关系的配置"></a>Hibernate 的一对多的关系的配置</h3><h4 id="创建一个项目引入响应的-jar-包和配置文件"><a href="#创建一个项目引入响应的-jar-包和配置文件" class="headerlink" title="创建一个项目引入响应的 jar 包和配置文件"></a>创建一个项目引入响应的 jar 包和配置文件</h4><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><h5 id="客户表"><a href="#客户表" class="headerlink" title="客户表"></a>客户表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`cst_customer`</span> (</span><br><span class="line">  <span class="string">`cust_id`</span> <span class="built_in">bigint</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'客户编号(主键)'</span>,</span><br><span class="line">  <span class="string">`cust_name`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'客户名称(公司名称)'</span>,</span><br><span class="line">  <span class="string">`cust_source`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'客户信息来源'</span>,</span><br><span class="line">  <span class="string">`cust_industry`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'客户所属行业'</span>,</span><br><span class="line">  <span class="string">`cust_level`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'客户级别'</span>,</span><br><span class="line">  <span class="string">`cust_phone`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'固定电话'</span>,</span><br><span class="line">  <span class="string">`cust_mobile`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'移动电话'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`cust_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h5 id="联系人"><a href="#联系人" class="headerlink" title="联系人"></a>联系人</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`cst_linkman`</span> (</span><br><span class="line">  <span class="string">`lkm_id`</span> <span class="built_in">bigint</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'联系人编号(主键)'</span>,</span><br><span class="line">  <span class="string">`lkm_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'联系人姓名'</span>,</span><br><span class="line">  <span class="string">`lkm_cust_id`</span> <span class="built_in">bigint</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'客户id'</span>,</span><br><span class="line">  <span class="string">`lkm_gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'联系人性别'</span>,</span><br><span class="line">  <span class="string">`lkm_phone`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'联系人办公电话'</span>,</span><br><span class="line">  <span class="string">`lkm_mobile`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'联系人手机'</span>,</span><br><span class="line">  <span class="string">`lkm_email`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'联系人邮箱'</span>,</span><br><span class="line">  <span class="string">`lkm_qq`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'联系人qq'</span>,</span><br><span class="line">  <span class="string">`lkm_position`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'联系人职位'</span>,</span><br><span class="line">  <span class="string">`lkm_memo`</span> <span class="built_in">varchar</span>(<span class="number">512</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'联系人备注'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`lkm_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`FK_cst_linkman_lkm_cust_id`</span> (<span class="string">`lkm_cust_id`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`FK_cst_linkman_lkm_cust_id`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`lkm_cust_id`</span>) <span class="keyword">REFERENCES</span> <span class="string">`cst_customer`</span> (<span class="string">`cust_id`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h4 id="创建与数据库表对应的实体类"><a href="#创建与数据库表对应的实体类" class="headerlink" title="创建与数据库表对应的实体类"></a>创建与数据库表对应的实体类</h4><h5 id="客户实体类"><a href="#客户实体类" class="headerlink" title="客户实体类"></a>客户实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.hibernate.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 客户类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tong</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Long cust_id;</span><br><span class="line"><span class="keyword">private</span> String cust_name;</span><br><span class="line"><span class="keyword">private</span> String cust_source;</span><br><span class="line"><span class="keyword">private</span> String cust_industry;</span><br><span class="line"><span class="keyword">private</span> String cust_level;</span><br><span class="line"><span class="keyword">private</span> String cust_phone;</span><br><span class="line"><span class="keyword">private</span> String cust_mobile;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 ORM 的方式表示：一个客户可以有多个联系人</span></span><br><span class="line"><span class="comment">// 一的一方创建多的一方的 Set 集合，Hibernate 中默认使用的是 Set 集合</span></span><br><span class="line"><span class="keyword">private</span> Set&lt;LinkMan&gt; linkMans = <span class="keyword">new</span> HashSet&lt;LinkMan&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Long <span class="title">getCust_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_id</span><span class="params">(Long cust_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_id = cust_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_name</span><span class="params">(String cust_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_name = cust_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_source</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_source;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_source</span><span class="params">(String cust_source)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_source = cust_source;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_industry</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_industry;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_industry</span><span class="params">(String cust_industry)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_industry = cust_industry;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_level</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_level</span><span class="params">(String cust_level)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_level = cust_level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_phone</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_phone;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_phone</span><span class="params">(String cust_phone)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_phone = cust_phone;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_mobile</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_mobile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_mobile</span><span class="params">(String cust_mobile)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_mobile = cust_mobile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Set&lt;LinkMan&gt; <span class="title">getLinkMans</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> linkMans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLinkMans</span><span class="params">(Set&lt;LinkMan&gt; linkMans)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.linkMans = linkMans;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="联系人实体类"><a href="#联系人实体类" class="headerlink" title="联系人实体类"></a>联系人实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.hibernate.domain;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 联系人类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tong</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkMan</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Long lkm_id;</span><br><span class="line"><span class="keyword">private</span> String lkm_name;</span><br><span class="line"><span class="keyword">private</span> String lkm_gender;</span><br><span class="line"><span class="keyword">private</span> String lkm_phone;</span><br><span class="line"><span class="keyword">private</span> String lkm_mobile;</span><br><span class="line"><span class="keyword">private</span> String lkm_email;</span><br><span class="line"><span class="keyword">private</span> String lkm_qq;</span><br><span class="line"><span class="keyword">private</span> String lkm_memo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 ORM 的方式表示：一个联系人只能属于一个客户</span></span><br><span class="line"><span class="comment">// 多的一方创建一的一方的对象</span></span><br><span class="line"><span class="keyword">private</span> Customer customer;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Long <span class="title">getLkm_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> lkm_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLkm_id</span><span class="params">(Long lkm_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.lkm_id = lkm_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getLkm_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> lkm_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLkm_name</span><span class="params">(String lkm_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.lkm_name = lkm_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getLkm_gender</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> lkm_gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLkm_gender</span><span class="params">(String lkm_gender)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.lkm_gender = lkm_gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getLkm_phone</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> lkm_phone;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLkm_phone</span><span class="params">(String lkm_phone)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.lkm_phone = lkm_phone;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getLkm_mobile</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> lkm_mobile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLkm_mobile</span><span class="params">(String lkm_mobile)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.lkm_mobile = lkm_mobile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getLkm_email</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> lkm_email;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLkm_email</span><span class="params">(String lkm_email)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.lkm_email = lkm_email;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getLkm_qq</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> lkm_qq;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLkm_qq</span><span class="params">(String lkm_qq)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.lkm_qq = lkm_qq;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getLkm_memo</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> lkm_memo;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLkm_memo</span><span class="params">(String lkm_memo)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.lkm_memo = lkm_memo;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Customer <span class="title">getCustomer</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> customer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCustomer</span><span class="params">(Customer customer)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.customer = customer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建映射文件（重点）"><a href="#创建映射文件（重点）" class="headerlink" title="创建映射文件（重点）"></a>创建映射文件（重点）</h4><h5 id="多的一方的映射的创建"><a href="#多的一方的映射的创建" class="headerlink" title="多的一方的映射的创建"></a>多的一方的映射的创建</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-mapping PUBLIC </span></span><br><span class="line"><span class="meta">    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 建立实体类与数据库表的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"com.test.hibernate.domain.Customer"</span> <span class="attr">table</span>=<span class="string">"cst_customer"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 建立 OID 与数据库表中主键的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"cust_id"</span> <span class="attr">column</span>=<span class="string">"cust_id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"native"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 建立类中其他属性与数据库表字段的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cust_name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cust_source"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cust_industry"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cust_level"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cust_phone"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cust_mobile"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置一对多的关系映射：放置的是多的一方的对象的 set 集合 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">set 标签：</span></span><br><span class="line"><span class="comment">* name : 多的一方的对象集合名称</span></span><br><span class="line"><span class="comment">* inverse : 是否放弃对外键的管理，默认为 false，即不放弃</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"linkMans"</span> <span class="attr">cascade</span>=<span class="string">"save-update,delete"</span> <span class="attr">inverse</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">key 标签：</span></span><br><span class="line"><span class="comment">* column : 多的一方的外键名称</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"lkm_cust_id"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">one-to-many:</span></span><br><span class="line"><span class="comment">* class : 多的一方的类的全路径</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">one-to-many</span> <span class="attr">class</span>=<span class="string">"com.test.hibernate.domain.LinkMan"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="一的一方的映射的创建"><a href="#一的一方的映射的创建" class="headerlink" title="一的一方的映射的创建"></a>一的一方的映射的创建</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-mapping PUBLIC </span></span><br><span class="line"><span class="meta">    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 建立实体类与数据库之间的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"com.test.hibernate.domain.Role"</span> <span class="attr">table</span>=<span class="string">"sys_role"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 建立 OID 与数据库表主键的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"role_id"</span> <span class="attr">column</span>=<span class="string">"role_id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"native"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 建立普通属性与表中其他字段的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"role_name"</span> <span class="attr">column</span>=<span class="string">"role_name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"role_memo"</span> <span class="attr">column</span>=<span class="string">"role_memo"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 建立角色与用户的多对多关系 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">set 标签：</span></span><br><span class="line"><span class="comment">* name: 对方在本类中的集合的名称</span></span><br><span class="line"><span class="comment">* table: 中间表的名称</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"users"</span> <span class="attr">table</span>=<span class="string">"sys_user_role"</span> <span class="attr">cascade</span>=<span class="string">"save-update,delete"</span>   <span class="attr">inverse</span>=<span class="string">"true"</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">key 标签：</span></span><br><span class="line"><span class="comment">* column: 当前对象对应中间表中外键的名称</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"role_id"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">many-to-many 标签</span></span><br><span class="line"><span class="comment">* class: 对方类的全路径</span></span><br><span class="line"><span class="comment">* column: 对方对象对应中间表的外键名称</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">"com.test.hibernate.domain.User"</span> <span class="attr">column</span>=<span class="string">"user_id"</span>&gt;</span><span class="tag">&lt;/<span class="name">many-to-many</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="创建核心配置文件"><a href="#创建核心配置文件" class="headerlink" title="创建核心配置文件"></a>创建核心配置文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-configuration PUBLIC</span></span><br><span class="line"><span class="meta">"-//Hibernate/Hibernate Configuration DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 1. 连接数据库的基本参数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.driver_class"</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.url"</span>&gt;</span>jdbc:mysql:///hibernate_day03<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.username"</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.password"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置Hibernate的方言 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.dialect"</span>&gt;</span>org.hibernate.dialect.MySQLDialect<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2. 可选配置 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 打印 SQL 语句 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.show_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 格式化 SQL 语句 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.format_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自动建表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.hbm2ddl.auto"</span>&gt;</span>update<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置C3P0连接池 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.provider_class"</span>&gt;</span>org.hibernate.connection.C3P0ConnectionProvider<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在连接池中可用的数据库连接的最少数目 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"c3p0.min_size"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在连接池中所有数据库连接的最大数目 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"c3p0.max_size"</span>&gt;</span>20<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设定数据库连接的过期时间,以秒为单位, 如果连接池中的某个数据库连接处于空闲状态的时间超过了timeout时间,就会从连接池中清除 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"c3p0.timeout"</span>&gt;</span>120<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--每3000秒检查所有连接池中的空闲连接 以秒为单位 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"c3p0.idle_test_period"</span>&gt;</span>3000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 设置事务的隔离级别 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 4 为 mysql 的默认隔离级别 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.isolation"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置 Session 绑定当前线程--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.current_session_context_class"</span>&gt;</span>thread<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 3. 引入映射文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">"com/test/hibernate/domain/Customer.hbm.xml"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">"com/test/hibernate/domain/LinkMan.hbm.xml"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="编写测试类"><a href="#编写测试类" class="headerlink" title="编写测试类"></a>编写测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.hibernate.demo1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.test.hibernate.domain.Customer;</span><br><span class="line"><span class="keyword">import</span> com.test.hibernate.domain.LinkMan;</span><br><span class="line"><span class="keyword">import</span> com.test.hibernate.utils.HibernateUtils;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一对多关系映射的测试类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tong</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HibernateDemo1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 保存 2 个客户  3 个联系，并且建立好关系存到数据库中</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建两个客户</span></span><br><span class="line">Customer customer1 = <span class="keyword">new</span> Customer();</span><br><span class="line">customer1.setCust_name(<span class="string">"张三"</span>);</span><br><span class="line">Customer customer2 = <span class="keyword">new</span> Customer();</span><br><span class="line">customer2.setCust_name(<span class="string">"李四"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建三个联系人</span></span><br><span class="line">LinkMan linkMan1 = <span class="keyword">new</span> LinkMan();</span><br><span class="line">linkMan1.setLkm_name(<span class="string">"王五"</span>);</span><br><span class="line">LinkMan linkMan2 = <span class="keyword">new</span> LinkMan();</span><br><span class="line">linkMan2.setLkm_name(<span class="string">"赵六"</span>);</span><br><span class="line">LinkMan linkMan3 = <span class="keyword">new</span> LinkMan();</span><br><span class="line">linkMan3.setLkm_name(<span class="string">"田七"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立关系</span></span><br><span class="line"><span class="comment">// 一个联系人对应一个客户</span></span><br><span class="line">linkMan1.setCustomer(customer1);</span><br><span class="line">linkMan2.setCustomer(customer1);</span><br><span class="line">linkMan3.setCustomer(customer2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个客户可以有多个联系人</span></span><br><span class="line">customer1.getLinkMans().add(linkMan1);</span><br><span class="line">customer1.getLinkMans().add(linkMan2);</span><br><span class="line">customer2.getLinkMans().add(linkMan3);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存数据</span></span><br><span class="line"><span class="comment">// 保存联系人</span></span><br><span class="line">session.save(linkMan1);</span><br><span class="line">session.save(linkMan2);</span><br><span class="line">session.save(linkMan3);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存客户</span></span><br><span class="line">session.save(customer1);</span><br><span class="line">session.save(customer2);</span><br><span class="line"></span><br><span class="line">tx.commit();</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Hibernate-的一对多的相关操作"><a href="#Hibernate-的一对多的相关操作" class="headerlink" title="Hibernate 的一对多的相关操作"></a>Hibernate 的一对多的相关操作</h3><h4 id="一对多关系只保存一边是否可以成功"><a href="#一对多关系只保存一边是否可以成功" class="headerlink" title="一对多关系只保存一边是否可以成功"></a>一对多关系只保存一边是否可以成功</h4><p>只保存一边是不可以的，会报一个瞬时态对象异常，因为持久态关联了一个瞬时态的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 测试一对多关系只保存一边是否可以</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    Customer customer = <span class="keyword">new</span> Customer();</span><br><span class="line">    customer.setCust_name(<span class="string">"张三"</span>);</span><br><span class="line"></span><br><span class="line">    LinkMan linkMan = <span class="keyword">new</span> LinkMan();</span><br><span class="line">    linkMan.setLkm_name(<span class="string">"李四"</span>);</span><br><span class="line"></span><br><span class="line">    linkMan.setCustomer(customer);</span><br><span class="line">    customer.getLinkMans().add(linkMan);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 只保存客户，不可以，报一个瞬时态对象异常，因为持久态对象关联了一个瞬时态对象</span></span><br><span class="line">    session.save(customer);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="一对多的级联操作"><a href="#一对多的级联操作" class="headerlink" title="一对多的级联操作"></a>一对多的级联操作</h4><blockquote><p>级联指的是在操作一个对象的时候会同时操作其关联的对象。</p></blockquote><h5 id="级联保存或更新"><a href="#级联保存或更新" class="headerlink" title="级联保存或更新"></a>级联保存或更新</h5><h6 id="保存客户级联保存联系人"><a href="#保存客户级联保存联系人" class="headerlink" title="保存客户级联保存联系人"></a>保存客户级联保存联系人</h6><p>要完成级联操作首先需要在客户的映射文件中的 set 集合上进行级联配置</p><p><code>&lt;set name=&quot;linkMans&quot; cascade=&quot;save-update,delete&quot; ...</code></p><p>编写测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  级联保存或更新</span></span><br><span class="line"><span class="comment"> *  * 保存客户级联联系人，操作的主体是客户，需要在 Customer.hbm.xml 中配置</span></span><br><span class="line"><span class="comment"> *  * &lt;set name="linkMans" cascade="save-update"&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    Customer customer = <span class="keyword">new</span> Customer();</span><br><span class="line">    customer.setCust_name(<span class="string">"张三"</span>);</span><br><span class="line"></span><br><span class="line">    LinkMan linkMan = <span class="keyword">new</span> LinkMan();</span><br><span class="line">    linkMan.setLkm_name(<span class="string">"李四"</span>);</span><br><span class="line"></span><br><span class="line">    linkMan.setCustomer(customer);</span><br><span class="line">    customer.getLinkMans().add(linkMan);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存客户级联保存联系人</span></span><br><span class="line">    session.save(customer);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="保存联系人级联保存客户"><a href="#保存联系人级联保存客户" class="headerlink" title="保存联系人级联保存客户"></a>保存联系人级联保存客户</h5><p>与保存客户级联保存联系人同理，只需进行相应的配置即可，首先在联系人的映射文件中的<code>many-to-one</code>标签上添加一个属性<code>cascade=&quot;save-update&quot;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  *  级联保存或更新</span></span><br><span class="line"><span class="comment">  *  * 保存联系人级联客户，操作的主体是联系人，需要在 LinkMan.hbm.xml 中配置</span></span><br><span class="line"><span class="comment">  *  * &lt;many-to-one name="customer" cascade="save-update" class="com.test.hibernate.domain.Customer" column="lkm_cust_id" /&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    Customer customer = <span class="keyword">new</span> Customer();</span><br><span class="line">    customer.setCust_name(<span class="string">"王五"</span>);</span><br><span class="line"></span><br><span class="line">    LinkMan linkMan = <span class="keyword">new</span> LinkMan();</span><br><span class="line">    linkMan.setLkm_name(<span class="string">"赵六"</span>);</span><br><span class="line"></span><br><span class="line">    linkMan.setCustomer(customer);</span><br><span class="line">    customer.getLinkMans().add(linkMan);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存联系人级联客户</span></span><br><span class="line">    session.save(customer);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试对象的导航"><a href="#测试对象的导航" class="headerlink" title="测试对象的导航"></a>测试对象的导航</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试对象的导航</span></span><br><span class="line"><span class="comment"> * * 前提：一对多的双方都设置了 cascade="save-update"</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    Customer customer = <span class="keyword">new</span> Customer();</span><br><span class="line">    customer.setCust_name(<span class="string">"张三"</span>);</span><br><span class="line"></span><br><span class="line">    LinkMan linkMan1 = <span class="keyword">new</span> LinkMan();</span><br><span class="line">    linkMan1.setLkm_name(<span class="string">"李四"</span>);</span><br><span class="line">    LinkMan linkMan2 = <span class="keyword">new</span> LinkMan();</span><br><span class="line">    linkMan2.setLkm_name(<span class="string">"王五"</span>);</span><br><span class="line">    LinkMan linkMan3 = <span class="keyword">new</span> LinkMan();</span><br><span class="line">    linkMan3.setLkm_name(<span class="string">"赵六"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置关联关系</span></span><br><span class="line">    linkMan1.setCustomer(customer);</span><br><span class="line">    customer.getLinkMans().add(linkMan2);</span><br><span class="line">    customer.getLinkMans().add(linkMan3);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前提双方都设置了级联</span></span><br><span class="line">    session.save(linkMan1);    <span class="comment">// 会发送 4 条 insert 语句</span></span><br><span class="line">    <span class="comment">// session.save(customer);// 会发送 3 条 insert 语句</span></span><br><span class="line">    <span class="comment">// session.save(linkMan2);// 会发送 1 条 insert 语句</span></span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="级联删除（基本不用）"><a href="#级联删除（基本不用）" class="headerlink" title="级联删除（基本不用）"></a>级联删除（基本不用）</h5><blockquote><p>删除一边的时候，同时将另一边的数据也一并删除。</p><p>如果要使用级联删除，前提是需要在主体方的映射文件中配置一个属性 <code>cascade=&quot;delete&quot;</code>，这样的话，只有主体方的数据被删除，那么相应的与它有关联的客体的数据也会被级联删除。</p></blockquote><h6 id="删除客户级联删除联系人"><a href="#删除客户级联删除联系人" class="headerlink" title="删除客户级联删除联系人"></a>删除客户级联删除联系人</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 级联删除</span></span><br><span class="line"><span class="comment"> * * 删除客户级联删除联系人，操作的主体是客户，需要在 Customer.hbm.xml 中配置</span></span><br><span class="line"><span class="comment"> * * &lt;set name="linkMans" cascade="delete"&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 先查询再删除</span></span><br><span class="line">    <span class="comment">// 默认情况：先将联系人的外键置为 null，然后删除客户</span></span><br><span class="line">    <span class="comment">/*Customer customer = session.get(Customer.class, 1l);</span></span><br><span class="line"><span class="comment">session.delete(customer);*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 级联删除</span></span><br><span class="line">    Customer customer = session.get(Customer.class, <span class="number">1l</span>);</span><br><span class="line">    session.delete(customer);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="删除联系人级联删除客户"><a href="#删除联系人级联删除客户" class="headerlink" title="删除联系人级联删除客户"></a>删除联系人级联删除客户</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 级联删除</span></span><br><span class="line"><span class="comment"> * * 删除联系人级联删除客户（很少用），操作的主体是联系人，需要在 LinkMan.hbm.xml 中配置</span></span><br><span class="line"><span class="comment"> * * &lt;set name="customer" cascade="delete"&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo7</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 先查询再删除</span></span><br><span class="line">    <span class="comment">// 级联删除</span></span><br><span class="line">    LinkMan linkMan = session.get(LinkMan.class, <span class="number">5l</span>);</span><br><span class="line">    session.delete(linkMan);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="一对多设置了双向关联产生多余-SQL-语句问题"><a href="#一对多设置了双向关联产生多余-SQL-语句问题" class="headerlink" title="一对多设置了双向关联产生多余 SQL 语句问题"></a>一对多设置了双向关联产生多余 SQL 语句问题</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 原来 2 号联系人属于 1 号客户，现将其改为隶属于 2 号客户</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo8</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询 2 号联系人</span></span><br><span class="line">    LinkMan linkMan = session.get(LinkMan.class, <span class="number">2l</span>);</span><br><span class="line">    <span class="comment">// 查询 2 号客户</span></span><br><span class="line">    Customer customer = session.get(Customer.class, <span class="number">2l</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 双向的关联：会发送重复的 SQL 语句，一的一方放弃外键的管理可以解决资源的浪费。</span></span><br><span class="line">    linkMan.setCustomer(customer);</span><br><span class="line">    customer.getLinkMans().add(linkMan);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 持久化对象可以自动更新数据库</span></span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="分析产生多余-SQL-的原因"><a href="#分析产生多余-SQL-的原因" class="headerlink" title="分析产生多余 SQL 的原因"></a>分析产生多余 SQL 的原因</h5><p>第 10 行代码和带 12 行代码分别会查询 2 号联系人和 2 号客户，查到之后会将查到的数据放到一级缓存的缓存区和快照区各一份。</p><p>那么当执行到第 15 行代码时，联系人 2 要关联客户 2，此时先会将这条数据放到缓存区中，与快照区中的数据进行对比，如果发生改变就会发送 SQL 语句去更新数据库，如果没有发生改变，就不会发送 SQL 也不会更新数据库，那么经过对比后显然数据发生了改变，这时候就会发送一条 SQL 去更新。</p><p>当执行到第 16 行代码时，又进行了一次对比，数据不一致，那么就会再发送一条 SQL 语句去更新数据库。</p><p>显然如果设置双向关联之后，就会产生多余的 SQL，进行重复的操作。</p><h5 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h5><p>即单向维护关系，使得一方主动放弃外键维护权，一般是被动的一方主动放弃外键维护权。在放弃方的 set 集合上配置<code>inverse=&quot;true&quot;</code>属性，即为放弃外键维护权。</p><h4 id="区分-cascade-和-inverse"><a href="#区分-cascade-和-inverse" class="headerlink" title="区分 cascade 和 inverse"></a>区分 cascade 和 inverse</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 区别 cascade 和 inverse </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo9</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询 2 号联系人</span></span><br><span class="line">    LinkMan linkMan = session.get(LinkMan.class, <span class="number">2l</span>);</span><br><span class="line">    <span class="comment">// 查询 2 号客户</span></span><br><span class="line">    Customer customer = session.get(Customer.class, <span class="number">2l</span>);</span><br><span class="line"></span><br><span class="line">    customer.getLinkMans().add(linkMan);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 条件：在 Customer.hbm.xml 上的 set 中配置 cascade="save-update" inverse="true"</span></span><br><span class="line">    session.save(customer);<span class="comment">// 客户会插入到数据库中、联系人也会插入到数据库中，但是外键会为 null</span></span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Hibernate-的多对多的关联映射"><a href="#Hibernate-的多对多的关联映射" class="headerlink" title="Hibernate 的多对多的关联映射"></a>Hibernate 的多对多的关联映射</h2><h3 id="Hibernate-的多对多关系的配置"><a href="#Hibernate-的多对多关系的配置" class="headerlink" title="Hibernate 的多对多关系的配置"></a>Hibernate 的多对多关系的配置</h3><h4 id="创建表-1"><a href="#创建表-1" class="headerlink" title="创建表"></a>创建表</h4><h5 id="用户表"><a href="#用户表" class="headerlink" title="用户表"></a>用户表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`sys_user`</span> (</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">bigint</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'用户id'</span>,</span><br><span class="line">  <span class="string">`user_code`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户账号'</span>,</span><br><span class="line">  <span class="string">`user_name`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户名称'</span>,</span><br><span class="line">  <span class="string">`user_password`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户密码'</span>,</span><br><span class="line">  <span class="string">`user_state`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'1:正常,0:暂停'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`user_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h5 id="角色表"><a href="#角色表" class="headerlink" title="角色表"></a>角色表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`sys_role`</span> (</span><br><span class="line">  <span class="string">`role_id`</span> <span class="built_in">bigint</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`role_name`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色名称'</span>,</span><br><span class="line">  <span class="string">`role_memo`</span> <span class="built_in">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'备注'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`role_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h5 id="中间表"><a href="#中间表" class="headerlink" title="中间表"></a>中间表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`sys_user_role`</span> (</span><br><span class="line">  <span class="string">`role_id`</span> <span class="built_in">bigint</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色id'</span>,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">bigint</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户id'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`role_id`</span>,<span class="string">`user_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`FK_user_role_user_id`</span> (<span class="string">`user_id`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`FK_user_role_role_id`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`role_id`</span>) <span class="keyword">REFERENCES</span> <span class="string">`sys_role`</span> (<span class="string">`role_id`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span>,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`FK_user_role_user_id`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`user_id`</span>) <span class="keyword">REFERENCES</span> <span class="string">`sys_user`</span> (<span class="string">`user_id`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h4 id="创建实体类"><a href="#创建实体类" class="headerlink" title="创建实体类"></a>创建实体类</h4><h5 id="用户实体类"><a href="#用户实体类" class="headerlink" title="用户实体类"></a>用户实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.hibernate.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tong</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">private</span> Long user_id;</span><br><span class="line"><span class="keyword">private</span> String user_code;</span><br><span class="line"><span class="keyword">private</span> String user_name;</span><br><span class="line"><span class="keyword">private</span> String user_password;</span><br><span class="line"><span class="keyword">private</span> String user_state;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多对多关系，放置的是对方的集合</span></span><br><span class="line"><span class="keyword">private</span> Set&lt;Role&gt; roles = <span class="keyword">new</span> HashSet&lt;Role&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Long <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Long user_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUser_code</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_code;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_code</span><span class="params">(String user_code)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_code = user_code;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUser_password</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_password</span><span class="params">(String user_password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_password = user_password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUser_state</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_state;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_state</span><span class="params">(String user_state)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_state = user_state;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Set&lt;Role&gt; <span class="title">getRoles</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> roles;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRoles</span><span class="params">(Set&lt;Role&gt; roles)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.roles = roles;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="角色实体类"><a href="#角色实体类" class="headerlink" title="角色实体类"></a>角色实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.hibernate.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 角色实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tong</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">private</span> Long role_id;</span><br><span class="line"><span class="keyword">private</span> String role_name;</span><br><span class="line"><span class="keyword">private</span> String role_memo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多对多关系，放置的是对方的集合</span></span><br><span class="line"><span class="keyword">private</span> Set&lt;User&gt; users = <span class="keyword">new</span> HashSet&lt;User&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Long <span class="title">getRole_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_id</span><span class="params">(Long role_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_id = role_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getRole_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_name</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getRole_memo</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_memo;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_memo</span><span class="params">(String role_memo)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_memo = role_memo;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Set&lt;User&gt; <span class="title">getUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> users;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsers</span><span class="params">(Set&lt;User&gt; users)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.users = users;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建映射配置文件"><a href="#创建映射配置文件" class="headerlink" title="创建映射配置文件"></a>创建映射配置文件</h4><h5 id="用户的映射文件"><a href="#用户的映射文件" class="headerlink" title="用户的映射文件"></a>用户的映射文件</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-mapping PUBLIC </span></span><br><span class="line"><span class="meta">    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置实体类与数据库表的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"com.test.hibernate.domain.User"</span> <span class="attr">table</span>=<span class="string">"sys_user"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 建立 OID 与数据库表主键的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"user_id"</span> <span class="attr">column</span>=<span class="string">"user_id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"native"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 建立普通属性与表其他字段的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user_code"</span> <span class="attr">column</span>=<span class="string">"user_code"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user_name"</span> <span class="attr">column</span>=<span class="string">"user_name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user_password"</span> <span class="attr">column</span>=<span class="string">"user_password"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user_state"</span> <span class="attr">column</span>=<span class="string">"user_state"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 建立用户与角色的多对多关系的映射 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">set 标签：</span></span><br><span class="line"><span class="comment">* name ： 对方集合的属性名称</span></span><br><span class="line"><span class="comment">* table ： 多对多关系需要中间表，放的是中间表的表名</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"roles"</span> <span class="attr">table</span>=<span class="string">"sys_user_role"</span> <span class="attr">cascade</span>=<span class="string">"save-update,delete"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">key 标签：</span></span><br><span class="line"><span class="comment">* column： 当前的对象在中间表中的外键名称</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"user_id"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">many-to-many 标签：</span></span><br><span class="line"><span class="comment">* class： 对方类的全路径</span></span><br><span class="line"><span class="comment">* column： 对方对象在中间表中的外键名称</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">"com.test.hibernate.domain.Role"</span> <span class="attr">column</span>=<span class="string">"role_id"</span> &gt;</span><span class="tag">&lt;/<span class="name">many-to-many</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="角色的映射文件"><a href="#角色的映射文件" class="headerlink" title="角色的映射文件"></a>角色的映射文件</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-mapping PUBLIC </span></span><br><span class="line"><span class="meta">    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 建立实体类与数据库之间的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"com.test.hibernate.domain.Role"</span> <span class="attr">table</span>=<span class="string">"sys_role"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 建立 OID 与数据库表主键的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"role_id"</span> <span class="attr">column</span>=<span class="string">"role_id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"native"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 建立普通属性与表中其他字段的映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"role_name"</span> <span class="attr">column</span>=<span class="string">"role_name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"role_memo"</span> <span class="attr">column</span>=<span class="string">"role_memo"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 建立角色与用户的多对多关系 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">set 标签：</span></span><br><span class="line"><span class="comment">* name: 对方在本类中的集合的名称</span></span><br><span class="line"><span class="comment">* table: 中间表的名称</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"users"</span> <span class="attr">table</span>=<span class="string">"sys_user_role"</span> <span class="attr">cascade</span>=<span class="string">"save-update,delete"</span>   <span class="attr">inverse</span>=<span class="string">"true"</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">key 标签：</span></span><br><span class="line"><span class="comment">* column: 当前对象对应中间表中外键的名称</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"role_id"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">many-to-many 标签</span></span><br><span class="line"><span class="comment">* class: 对方类的全路径</span></span><br><span class="line"><span class="comment">* column: 对方对象对应中间表的外键名称</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">"com.test.hibernate.domain.User"</span> <span class="attr">column</span>=<span class="string">"user_id"</span>&gt;</span><span class="tag">&lt;/<span class="name">many-to-many</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="在核心配置文件中引入两个对象的映射文件"><a href="#在核心配置文件中引入两个对象的映射文件" class="headerlink" title="在核心配置文件中引入两个对象的映射文件"></a>在核心配置文件中引入两个对象的映射文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 3. 引入映射文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">"com/test/hibernate/domain/User.hbm.xml"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">"com/test/hibernate/domain/Role.hbm.xml"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="编写测试类-1"><a href="#编写测试类-1" class="headerlink" title="编写测试类"></a>编写测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.hibernate.demo2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.test.hibernate.domain.Role;</span><br><span class="line"><span class="keyword">import</span> com.test.hibernate.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.test.hibernate.utils.HibernateUtils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试多对多的关系映射</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tong</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HibernateDemo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 保存数据，保存 2 个用户，3 个角色，并建立关系</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 2 个用户</span></span><br><span class="line">User user1 = <span class="keyword">new</span> User();</span><br><span class="line">user1.setUser_name(<span class="string">"张三"</span>);</span><br><span class="line">User user2 = <span class="keyword">new</span> User();</span><br><span class="line">user2.setUser_name(<span class="string">"李四"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 3 个角色</span></span><br><span class="line">Role role1 = <span class="keyword">new</span> Role();</span><br><span class="line">role1.setRole_name(<span class="string">"研发部"</span>);</span><br><span class="line">Role role2 = <span class="keyword">new</span> Role();</span><br><span class="line">role2.setRole_name(<span class="string">"市场部"</span>);</span><br><span class="line">Role role3 = <span class="keyword">new</span> Role();</span><br><span class="line">role3.setRole_name(<span class="string">"公关部"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多对多建立双向关联映射，需要一方主动放弃外键维护权</span></span><br><span class="line"><span class="comment">// ***一般被动方放弃外键维护权</span></span><br><span class="line">user1.getRoles().add(role1);</span><br><span class="line">user1.getRoles().add(role2);</span><br><span class="line">user2.getRoles().add(role2);</span><br><span class="line">user2.getRoles().add(role3);</span><br><span class="line">role1.getUsers().add(user1);</span><br><span class="line">role2.getUsers().add(user1);</span><br><span class="line">role2.getUsers().add(user2);</span><br><span class="line">role3.getUsers().add(user2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存数据</span></span><br><span class="line">session.save(user1);</span><br><span class="line">session.save(user2);</span><br><span class="line">session.save(role1);</span><br><span class="line">session.save(role2);</span><br><span class="line">session.save(role3);</span><br><span class="line"></span><br><span class="line">tx.commit();</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Hibernate-的多对多的操作"><a href="#Hibernate-的多对多的操作" class="headerlink" title="Hibernate 的多对多的操作"></a>Hibernate 的多对多的操作</h3><h4 id="多对多关系只保存一边是否能够成功"><a href="#多对多关系只保存一边是否能够成功" class="headerlink" title="多对多关系只保存一边是否能够成功"></a>多对多关系只保存一边是否能够成功</h4><p>不可以，必须要一方放弃外键维护权。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 只保存一边是否可以？</span></span><br><span class="line"><span class="comment"> * 不可以，会报瞬时态对象异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 1 个用户</span></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUser_name(<span class="string">"张三"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 1 个角色</span></span><br><span class="line">    Role role = <span class="keyword">new</span> Role();</span><br><span class="line">    role.setRole_name(<span class="string">"研发部"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 建立关系</span></span><br><span class="line">    user.getRoles().add(role);</span><br><span class="line">    role.getUsers().add(user);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 只保存一边，会报异常</span></span><br><span class="line">    <span class="comment">// session.save(user);</span></span><br><span class="line">    session.save(role);</span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多对多的级联保存或更新"><a href="#多对多的级联保存或更新" class="headerlink" title="多对多的级联保存或更新"></a>多对多的级联保存或更新</h4><blockquote><p>要完成级联操作，前提是需要在主动方的 set 集合上配置一个<code>cascade=&quot;save-update&quot;</code>属性。</p></blockquote><h5 id="保存用户级联保存角色"><a href="#保存用户级联保存角色" class="headerlink" title="保存用户级联保存角色"></a>保存用户级联保存角色</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 级联保存：</span></span><br><span class="line"><span class="comment"> * * 保存用户级联保存角色，需要在用户的映射文件中配置</span></span><br><span class="line"><span class="comment"> * * 在 User.hbm.xml 中的 set 上配置 cascade="save-update"</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 1 个用户</span></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUser_name(<span class="string">"张三"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 1 个角色</span></span><br><span class="line">    Role role = <span class="keyword">new</span> Role();</span><br><span class="line">    role.setRole_name(<span class="string">"研发部"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 建立关系</span></span><br><span class="line">    user.getRoles().add(role);</span><br><span class="line">    role.getUsers().add(user);</span><br><span class="line"></span><br><span class="line">    session.save(user);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="保存角色级联保存用户"><a href="#保存角色级联保存用户" class="headerlink" title="保存角色级联保存用户"></a>保存角色级联保存用户</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 级联保存：</span></span><br><span class="line"><span class="comment"> * * 保存角色级联保存用户，需要在角色的映射文件中配置</span></span><br><span class="line"><span class="comment"> * * 在 Role.hbm.xml 中的 set 上配置 cascade="save-update"</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 1 个用户</span></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUser_name(<span class="string">"张三"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 1 个角色</span></span><br><span class="line">    Role role = <span class="keyword">new</span> Role();</span><br><span class="line">    role.setRole_name(<span class="string">"研发部"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 建立关系</span></span><br><span class="line">    user.getRoles().add(role);</span><br><span class="line">    role.getUsers().add(user);</span><br><span class="line"></span><br><span class="line">    session.save(role);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多对多的级联删除（基本不用）"><a href="#多对多的级联删除（基本不用）" class="headerlink" title="多对多的级联删除（基本不用）"></a>多对多的级联删除（基本不用）</h4><blockquote><p>同样要完成级联删除操作，需要在主动方的 set 集合上配置一个 <code>cascade=&quot;delete&quot;</code>属性。</p></blockquote><h5 id="删除用户级联删除角色"><a href="#删除用户级联删除角色" class="headerlink" title="删除用户级联删除角色"></a>删除用户级联删除角色</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 级联删除：</span></span><br><span class="line"><span class="comment"> * * 删除用户级联删除角色，需要在用户的映射文件中配置</span></span><br><span class="line"><span class="comment"> * * 在 User.hbm.xml 中的 set 上配置 cascade="delete"</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询 1 号客户</span></span><br><span class="line">    User user = session.get(User.class, <span class="number">1l</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除 1 号客户级联删除相应的角色</span></span><br><span class="line">    session.delete(user);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="删除角色级联删除用户"><a href="#删除角色级联删除用户" class="headerlink" title="删除角色级联删除用户"></a>删除角色级联删除用户</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 级联删除：</span></span><br><span class="line"><span class="comment"> * * 删除角色级联删除用户，需要在角色的映射文件中配置</span></span><br><span class="line"><span class="comment"> * * 在 Role.hbm.xml 中的 set 上配置 cascade="delete"</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询 2 号角色</span></span><br><span class="line">    Role role = session.get(Role.class, <span class="number">3l</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除 3 号角色级联删除相应的客户</span></span><br><span class="line">    session.delete(role);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多对多的其他操作"><a href="#多对多的其他操作" class="headerlink" title="多对多的其他操作"></a>多对多的其他操作</h3><h4 id="给用户添加角色"><a href="#给用户添加角色" class="headerlink" title="给用户添加角色"></a>给用户添加角色</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给用户添加角色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo7</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给 1 号用户添加 2 号 角色</span></span><br><span class="line">    <span class="comment">// 先查询 1 号用户</span></span><br><span class="line">    User user = session.get(User.class, <span class="number">1l</span>);</span><br><span class="line">    <span class="comment">// 再查询 2 号角色</span></span><br><span class="line">    Role role = session.get(Role.class, <span class="number">2l</span>);</span><br><span class="line"></span><br><span class="line">    user.getRoles().add(role);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="给用户改选角色"><a href="#给用户改选角色" class="headerlink" title="给用户改选角色"></a>给用户改选角色</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给用户改选角色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo8</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给 2 号用户的 2 号 角色改选为 3 号角色</span></span><br><span class="line">    <span class="comment">// 先查询 2 号用户</span></span><br><span class="line">    User user = session.get(User.class, <span class="number">2l</span>);</span><br><span class="line">    <span class="comment">// 查询 2 号角色和 3 号角色</span></span><br><span class="line">    Role role2 = session.get(Role.class, <span class="number">2l</span>);</span><br><span class="line">    Role role3 = session.get(Role.class, <span class="number">3l</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 先移除 2 号角色再添加 3 号角色</span></span><br><span class="line">    user.getRoles().remove(role2);</span><br><span class="line">    user.getRoles().add(role3);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="给用户删除角色"><a href="#给用户删除角色" class="headerlink" title="给用户删除角色"></a>给用户删除角色</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给用户删除角色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo9</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给 2 号用户删除 3 号 角色</span></span><br><span class="line">    <span class="comment">// 先查询 2 号用户</span></span><br><span class="line">    User user = session.get(User.class, <span class="number">2l</span>);</span><br><span class="line">    <span class="comment">// 查询 2 号角色</span></span><br><span class="line">    Role role3 = session.get(Role.class, <span class="number">3l</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除 2 号角色</span></span><br><span class="line">    user.getRoles().remove(role3);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><p>能够使用 Hibernate 搭建一对多或多对多的配置环境。</p>]]></content>
    
    <summary type="html">
    
      Hibernate 基础篇（三），我们一起学习 Hibernate。
    
    </summary>
    
      <category term="Java" scheme="hellotong.ml/categories/Java/"/>
    
    
      <category term="Java" scheme="hellotong.ml/tags/Java/"/>
    
      <category term="Hibernate" scheme="hellotong.ml/tags/Hibernate/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate (二)</title>
    <link href="hellotong.ml/hibernate02/"/>
    <id>hellotong.ml/hibernate02/</id>
    <published>2018-11-22T11:27:11.009Z</published>
    <updated>2018-11-22T11:42:42.026Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hibernate-持久化类的编写规则"><a href="#Hibernate-持久化类的编写规则" class="headerlink" title="Hibernate 持久化类的编写规则"></a>Hibernate 持久化类的编写规则</h2><h3 id="什么是持久化类"><a href="#什么是持久化类" class="headerlink" title="什么是持久化类"></a>什么是持久化类</h3><p>持久化：就是将内存中的数据永久的存储在关系型数据库中。</p><p>持久化类：指的是一个 Java 类与数据库表建立了映射关系，那么这么类就称之为持久化类。</p><h3 id="持久化类的编写规则"><a href="#持久化类的编写规则" class="headerlink" title="持久化类的编写规则"></a>持久化类的编写规则</h3><ol><li>首先编写持久化类需要提供无参的构造方法，在 Java 中默认构造即无参构造。</li><li>持久化类的属性需要私有，对私有的属性提供公共的 set 和 get 方法。</li><li>持久化类的属性要尽量使用包装类的类型。举个例子，假如使用基本数据类型 int，它默认值是 0，那么如果把这个 0 存到数据库中，就会产生歧义，到底是用户存的 0 呢，还是用户没有设置呢，它的默认值就是 0 呀。如果使用包装类 Integer 的话就可以避免发生这种情况，我们一起来分析一下，它的默认值是 null，如果用户存一个数，数据库中就会显示相应的数值，如果用户没有设置值，那么数据库中就会显示为 null，一目了然，歧义就解决了。</li><li>持久化类要有一个唯一标识 OID 与表的主键对应。</li><li>持久化类尽量不要使用 final 进行修饰。因为 Hibernate 中有延时加载优化机制，这个机制中会产生代理对象，会继承持久化类产生子类，从而产生代理对象，如果用 final 修饰的话，这个优化机制就失效了。</li></ol><h2 id="Hibernate-主键生成策略"><a href="#Hibernate-主键生成策略" class="headerlink" title="Hibernate 主键生成策略"></a>Hibernate 主键生成策略</h2><h3 id="主键类型"><a href="#主键类型" class="headerlink" title="主键类型"></a>主键类型</h3><p>自然主键：把具有业务含义的字段作为主键，称为自然主键。</p><p>代理主键：把不具备业务含义的字段作为主键，称之为代理主键，通常使用 id 来作为主键。</p><h3 id="Hibernate-的主键生成策略"><a href="#Hibernate-的主键生成策略" class="headerlink" title="Hibernate 的主键生成策略"></a>Hibernate 的主键生成策略</h3><blockquote><p>在实际开发中一般是不允许用户手动设置主键的，一般是手动编写程序进行设置，再交给数据库，在 Hibernate 中为了减少程序代码的编写，它提供了很多中的主键生成策略。</p></blockquote><ol><li>increment：hibernate 中提供的自增长机制，适用 short、int、long 类型的主键。线程不安全，建议在单线程中使用。</li><li>identity：适用 short、int、long 类型的主键，采用的是数据库底层的自动增长机制。适用于有自动增长机制的数据库，如 MySQL 等。Oracle 是没有自动增长的。</li><li>sequence：适用 short、int、long 类型的主键，采用的是序列化的方式，支持 Oracle 等。</li><li>uuid：适用于字符串类型的主键。使用 hibernate 中的随机方式生成字符串主键，类似于 Java 给提供的 UUID 对象。</li><li>native：根据本地机制进行自动调整，可以在 identity 和 sequence 之间进行自动切换。</li><li>assigned：hibernate 放弃对主键的管理，需要手动编写程序或用户自己设置。</li><li>foreign：外部主键。</li></ol><h2 id="Hibernate-的持久化的三种状态"><a href="#Hibernate-的持久化的三种状态" class="headerlink" title="Hibernate 的持久化的三种状态"></a>Hibernate 的持久化的三种状态</h2><p>Hibernate 为了更好的管理持久化类，将持久化类分成了三种状态。分别是瞬时态、持久态、脱管态或游离态。</p><h3 id="瞬时态"><a href="#瞬时态" class="headerlink" title="瞬时态"></a>瞬时态</h3><p>此状态对象没有唯一标识 OID，没有被 session 管理，称为是瞬时态对象。</p><h3 id="持久态"><a href="#持久态" class="headerlink" title="持久态"></a>持久态</h3><p><strong>此状态对象有唯一标识 OID，且被 session 管理，称为持久态对象。</strong></p><h3 id="脱管态"><a href="#脱管态" class="headerlink" title="脱管态"></a>脱管态</h3><p>此状态对象有唯一标识 OID，但没有被 session 管理，称为脱管态对象。</p><h3 id="如何区分三种状态对象"><a href="#如何区分三种状态对象" class="headerlink" title="如何区分三种状态对象"></a>如何区分三种状态对象</h3><p>通过一段代码解释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.openSession();</span><br><span class="line">    Transaction transaction = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    Customer customer = <span class="keyword">new</span> Customer();    <span class="comment">// 瞬时态对象，没有唯一标识 OID，没有被 session 管理</span></span><br><span class="line">    customer.setCust_name(<span class="string">"李四"</span>);</span><br><span class="line">    Serializable id = session.save(customer);<span class="comment">// 持久态对象，有唯一标识 OID，被 session 管理</span></span><br><span class="line"></span><br><span class="line">    transaction.commit();</span><br><span class="line">    session.close();  <span class="comment">// 脱管态对象，有唯一标识 OID，没有被 session 管理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三种状态对象的转换"><a href="#三种状态对象的转换" class="headerlink" title="三种状态对象的转换"></a>三种状态对象的转换</h3><p><img src="http://pifu006nk.bkt.clouddn.com/blog/20181122/IaarSkIsG8j2.jpg?imageslim" alt="mark"></p><h4 id="瞬时态对象"><a href="#瞬时态对象" class="headerlink" title="瞬时态对象"></a>瞬时态对象</h4><p>获得：<code>Customer customer = new Customer()</code>，简单来说就是 new</p><p>状态转换：</p><ul><li><p>瞬时态 –&gt; 持久态</p><p>调用保存方法<code>save(Object obj)</code>、调用保存或更新方法<code>saveOrUpdate(Object obj)</code></p></li><li><p>瞬时态 –&gt; 脱管态</p><p>设置 id，<code>customer.setCust_id()</code></p></li></ul><h4 id="持久态对象"><a href="#持久态对象" class="headerlink" title="持久态对象"></a>持久态对象</h4><p>获得：可通过查询方法<code>get()、load()</code>获得</p><p>状态转换：</p><ul><li><p>持久态 –&gt; 瞬时态</p><p>调用删除方法<code>delete()</code></p></li><li><p>持久态 –&gt; 脱管态</p><p>session 关闭<code>close()</code>、清除所有<code>clear()</code>、清除某一个对象<code>evict(Object obj)</code></p></li></ul><h4 id="脱管态对象"><a href="#脱管态对象" class="headerlink" title="脱管态对象"></a>脱管态对象</h4><p>获得：两部曲，先 new 对象，然后设置 id。<code>Customer customer = new Customer(); customer.setCust_id(1l);</code></p><p>状态转换：</p><ul><li><p>脱管态 –&gt; 瞬时态</p><p>将该对象的 id 置为 null 即可</p></li><li><p>脱管态 –&gt; 持久态</p><p><code>update()</code>、<code>saveOrUpdate()</code></p></li></ul><h3 id="持久态对象的特性"><a href="#持久态对象的特性" class="headerlink" title="持久态对象的特性"></a>持久态对象的特性</h3><p>持久态对象能够自动更新数据库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.openSession();</span><br><span class="line">    Transaction transaction = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得持久化对象，持久化对象可以自动更新数据库</span></span><br><span class="line">    Customer customer = session.get(Customer.class, <span class="number">1l</span>);</span><br><span class="line">    customer.setCust_name(<span class="string">"哈哈"</span>);</span><br><span class="line">    <span class="comment">// session.update(customer);</span></span><br><span class="line">    transaction.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>持久态对象之所以有自动更新数据库的特性是依赖于 Hibernate 的一级缓存。</p><h2 id="Hibernate-的一级缓存"><a href="#Hibernate-的一级缓存" class="headerlink" title="Hibernate 的一级缓存"></a>Hibernate 的一级缓存</h2><h3 id="什么是缓存"><a href="#什么是缓存" class="headerlink" title="什么是缓存"></a>什么是缓存</h3><p>缓存：是一种优化方式，将数据存到内存当中，使用时从缓存中获取，减少直接向永久性数据源的读取次数，提高应用的性能。</p><h3 id="Hibernate-的一级缓存-1"><a href="#Hibernate-的一级缓存-1" class="headerlink" title="Hibernate 的一级缓存"></a>Hibernate 的一级缓存</h3><blockquote><p>Hibernate 中提供的优化手段：缓存、抓取策略。Hibernate 中提供了两种缓存机制：一级缓存、二级缓存。</p></blockquote><p>Hibernate 的一级缓存，也称为是 Session 级别的缓存，一级缓存的生命周期与 Session 对象一致，其实一级缓存就是由 Session 对象中的一系列 Java 集合构成的。<strong>一级缓存是自带的且不可卸载的。</strong></p><p>Hibernate 的二级缓存是基于 SessionFactory 级别的缓存，是需要配置的，通常二级缓存使用 Redis 替代较多。</p><h3 id="证明一级缓存的存在"><a href="#证明一级缓存的存在" class="headerlink" title="证明一级缓存的存在"></a>证明一级缓存的存在</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 证明一级缓存的存在</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.openSession();</span><br><span class="line">    Transaction transaction = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Customer customer1 = session.get(Customer.class, 1l);// 发送 SQL，从数据库中查询之后放到一级缓存中</span></span><br><span class="line"><span class="comment">    System.out.println(customer1);</span></span><br><span class="line"><span class="comment">    Customer customer2 = session.get(Customer.class, 1l);// 不发送 SQL，直接从一级缓存中取</span></span><br><span class="line"><span class="comment">    System.out.println(customer2);</span></span><br><span class="line"><span class="comment">    System.out.println(customer1 == customer2);*/</span></span><br><span class="line"></span><br><span class="line">    Customer customer1 = <span class="keyword">new</span> Customer();</span><br><span class="line">    customer1.setCust_name(<span class="string">"张三"</span>);</span><br><span class="line">    Serializable id = session.save(customer1);</span><br><span class="line">    System.out.println(id);</span><br><span class="line"></span><br><span class="line">    Customer customer2 = session.get(Customer.class, id);<span class="comment">// 不发送 SQL，save() 之后，会将保存的对象放到缓存中</span></span><br><span class="line">    System.out.println(customer2);</span><br><span class="line">    System.out.println(customer1 == customer2);</span><br><span class="line"></span><br><span class="line">    transaction.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Hibernate-的一级缓存结构"><a href="#Hibernate-的一级缓存结构" class="headerlink" title="Hibernate 的一级缓存结构"></a>Hibernate 的一级缓存结构</h3><blockquote><p>一级缓存内部存在一个特殊的区域：快照区</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 测试一级缓存的快照区</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.openSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    Customer customer1 = session.get(Customer.class, <span class="number">1l</span>);<span class="comment">// 发送 SQL 语句，同时放到一级缓存和快照区</span></span><br><span class="line">    customer1.setCust_name(<span class="string">"李四"</span>);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Hibernate-的事务管理"><a href="#Hibernate-的事务管理" class="headerlink" title="Hibernate 的事务管理"></a>Hibernate 的事务管理</h2><h3 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h3><p>事务指的是逻辑上的一组操作，组成这组操作的各个逻辑单元要么全部成功，要么全部失败。</p><h3 id="事务的特性"><a href="#事务的特性" class="headerlink" title="事务的特性"></a>事务的特性</h3><ol><li>原子性：代表事务不可分割。</li><li>一致性：代表事务执行前后，数据完整性保持一致。</li><li>隔离性：代表一个事务在执行过程中，不应该受到其他事务的干扰。</li><li>持久性：代表事务执行结束后，数据会持久保存到数据库中。</li></ol><h3 id="如果不考虑隔离性，引发的安全性问题"><a href="#如果不考虑隔离性，引发的安全性问题" class="headerlink" title="如果不考虑隔离性，引发的安全性问题"></a>如果不考虑隔离性，引发的安全性问题</h3><h4 id="读问题"><a href="#读问题" class="headerlink" title="读问题"></a>读问题</h4><ul><li>脏读： 一个事务读到另一个事务未提交的数据。</li><li>不可重复读：一个事务读到另一个事务已提交的 update 更新数据，导致在前一个事务中多次查询结果不一致。</li><li>虚读：一个事务读到另一个事务已提交的 insert 添加数据，导致在前一个事务中多次查询结果不一致。</li></ul><h4 id="写问题"><a href="#写问题" class="headerlink" title="写问题"></a>写问题</h4><ul><li>引发两类丢失更新</li></ul><h4 id="读写问题的解决"><a href="#读写问题的解决" class="headerlink" title="读写问题的解决"></a>读写问题的解决</h4><p>通过设置事务的更新级别控制</p><ul><li>Read uncommited：不能解决任何问题。</li><li>Read commited：可以解决脏读，但是不可重复读和虚读可能发生。（Oracle 的默认事务隔离级别）</li><li>Repeatable read：可以解决脏读和不可重复读，但是虚读可能发生。（MySQL 的默认事务隔离级别）</li><li>Serializable：可以解决所有的读问题，它属于死锁，安全性高，但效率低。</li></ul><h3 id="Hibernate-中设置事务隔离级别"><a href="#Hibernate-中设置事务隔离级别" class="headerlink" title="Hibernate 中设置事务隔离级别"></a>Hibernate 中设置事务隔离级别</h3><p>可以在 hibernate 的核心配置文件中设置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 设置事务隔离级别 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 4 为 MySql 的默认级别 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.isolation"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="线程绑定-Session"><a href="#线程绑定-Session" class="headerlink" title="线程绑定 Session"></a>线程绑定 Session</h2><blockquote><p>将 Session 与当前线程绑定方便事务控制</p></blockquote><h3 id="改写使用-Hibernate-操作数据库的工具类"><a href="#改写使用-Hibernate-操作数据库的工具类" class="headerlink" title="改写使用 Hibernate 操作数据库的工具类"></a>改写使用 Hibernate 操作数据库的工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HibernateUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 Configuration 对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Configuration cfg;</span><br><span class="line"><span class="comment">// 创建 SessionFactory 对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> SessionFactory sf;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给两个变量赋值</span></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">sf = cfg.buildSessionFactory();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对外提供公共的方法获得连接对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Session <span class="title">openSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sf.openSession();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 Session 与当前线程绑定</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Session <span class="title">getCurrentSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sf.getCurrentSession();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在-Hibernate-核心配置文件中配置"><a href="#在-Hibernate-核心配置文件中配置" class="headerlink" title="在 Hibernate 核心配置文件中配置"></a>在 Hibernate 核心配置文件中配置</h3><blockquote><p>要使用 getCurrentSession() 方法，需要在 hibernate 核心配置文件中配置后才能使用</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置 session 绑定当前线程 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.current_session_context_class"</span>&gt;</span>thread<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Hibernate-的其他-API"><a href="#Hibernate-的其他-API" class="headerlink" title="Hibernate 的其他 API"></a>Hibernate 的其他 API</h2><h3 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h3><p>Query 代表面向对象的一个 Hibernate 查询操作，通常使用 session.createQuery() 方法接收一个 HQL（Hibernate Query Language）语句，然后进行查询操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// Query</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 简单查询/查询所有</span></span><br><span class="line">    <span class="comment">// 通过 Session 获得 Query 接口，HQL：hibernate query language</span></span><br><span class="line">    <span class="comment">/* String hql = "from Customer";</span></span><br><span class="line"><span class="comment">Query query = session.createQuery(hql);*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 条件查询</span></span><br><span class="line">    <span class="comment">/*String hql = "from Customer where cust_name like ?";</span></span><br><span class="line"><span class="comment">Query query = session.createQuery(hql);</span></span><br><span class="line"><span class="comment">// 设置条件</span></span><br><span class="line"><span class="comment">query.setParameter(0, "张%");// 在 hibernate 中 0 代表第一个问号*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    String hql = <span class="string">"from Customer"</span>;</span><br><span class="line">    Query query = session.createQuery(hql);</span><br><span class="line">    <span class="comment">// 设置分页</span></span><br><span class="line">    query.setFirstResult(<span class="number">0</span>);<span class="comment">// 从第一条数据开始</span></span><br><span class="line">    query.setMaxResults(<span class="number">3</span>);<span class="comment">// 每页显示 3 条数据</span></span><br><span class="line"></span><br><span class="line">    List&lt;Customer&gt; list = query.list();</span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Criteria"><a href="#Criteria" class="headerlink" title="Criteria"></a>Criteria</h3><p>Criteria 是一个完全面向对象，可扩展的条件查询 API，Criteria 查询又称为 QBC（Query By Criteria）查询。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// Criteria</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 Session 获得 Criteria 接口</span></span><br><span class="line">    Criteria criteria = session.createCriteria(Customer.class);</span><br><span class="line">    <span class="comment">// 简单查询/查询所有</span></span><br><span class="line">    <span class="comment">// List&lt;Customer&gt; list = criteria.list();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 条件查询</span></span><br><span class="line">    <span class="comment">/*criteria.add(Restrictions.like("cust_name", "张", MatchMode.START));// 匹配名字开头是张的数据</span></span><br><span class="line"><span class="comment">List&lt;Customer&gt; list = criteria.list();*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    criteria.setFirstResult(<span class="number">3</span>);</span><br><span class="line">    criteria.setMaxResults(<span class="number">3</span>);</span><br><span class="line">    List&lt;Customer&gt; list = criteria.list();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SQLQuery"><a href="#SQLQuery" class="headerlink" title="SQLQuery"></a>SQLQuery</h3><p>SQLQuery 这个接口用于接收一个 sql 语句进行查询。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// SQLQuery</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 简单查询/查询所有</span></span><br><span class="line">    <span class="comment">/*String sql = "select * from cst_customer";</span></span><br><span class="line"><span class="comment">SQLQuery query = session.createSQLQuery(sql);*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 条件查询</span></span><br><span class="line">    <span class="comment">/*String sql = "select * from cst_customer where cust_name=?";</span></span><br><span class="line"><span class="comment">SQLQuery query = session.createSQLQuery(sql);</span></span><br><span class="line"><span class="comment">// 设置条件</span></span><br><span class="line"><span class="comment">query.setParameter(0, "哈哈");*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    String sql = <span class="string">"select * from cst_customer limit ?, ?"</span>;</span><br><span class="line">    SQLQuery query = session.createSQLQuery(sql);</span><br><span class="line">    <span class="comment">// 设置分页</span></span><br><span class="line">    query.setParameter(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">    query.setParameter(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;Object[]&gt; list = query.list();</span><br><span class="line">    <span class="keyword">for</span> (Object[] objects : list) &#123;</span><br><span class="line">        System.out.println(Arrays.toString(objects));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p><strong>将 Session 绑定在线程上后，当线程执行完毕之后，Session 对象也会自动关闭，不需要手动 <code>session.close()</code> 关闭，否则会报错。</strong> </p>]]></content>
    
    <summary type="html">
    
      Hibernate 基础篇（二），我们一起学习 Hibernate。
    
    </summary>
    
      <category term="Java" scheme="hellotong.ml/categories/Java/"/>
    
    
      <category term="Java" scheme="hellotong.ml/tags/Java/"/>
    
      <category term="Hibernate" scheme="hellotong.ml/tags/Hibernate/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate (一)</title>
    <link href="hellotong.ml/hibernate01/"/>
    <id>hellotong.ml/hibernate01/</id>
    <published>2018-11-21T13:42:23.612Z</published>
    <updated>2018-11-22T11:29:08.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hibernate-框架概述"><a href="#Hibernate-框架概述" class="headerlink" title="Hibernate 框架概述"></a>Hibernate 框架概述</h2><ul><li><p>什么是框架</p><p>框架是软件的半成品，已经完成了部分功能，可以提交开发效率。</p></li><li><p>什么是 Hibernate</p><p>简单地说，Hibernate 就是持久层（dao 层） 的 ORM 框架。</p></li><li><p>什么是 ORM</p><p>ORM：全称 Object Relational Mapping，意思即对象关系映射，指的是将一个 Java 中的实体类与关系型数据库中的表建立一种映射关系，从而操作对象就可以操作数据库中的表。</p></li></ul><h2 id="Hibernate-的入门"><a href="#Hibernate-的入门" class="headerlink" title="Hibernate 的入门"></a>Hibernate 的入门</h2><ol><li><p>下载 Hibernate 开发环境并解压到本地</p><p><a href="https://sourceforge.net/projects/hibernate/files/hibernate-orm/5.0.7.Final/" target="_blank" rel="noopener">下载地址</a></p></li><li><p>创建一个项目，引入相应的 jar 包</p><ul><li>数据库驱动包</li><li>Hibernate 开发的必须 jar 包</li><li>Hibernate 的日志记录包</li></ul><p><img src="http://pifu006nk.bkt.clouddn.com/blog/20181121/6gMcolIF6d5p.png?imageslim" alt="mark"></p></li><li><p>在数据库中创建表</p><p>建表 SQL 语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`cst_customer`</span> (</span><br><span class="line">  <span class="string">`cust_id`</span> <span class="built_in">bigint</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'客户编号(主键)'</span>,</span><br><span class="line">  <span class="string">`cust_name`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'客户名称(公司名称)'</span>,</span><br><span class="line">  <span class="string">`cust_source`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'客户信息来源'</span>,</span><br><span class="line">  <span class="string">`cust_industry`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'客户所属行业'</span>,</span><br><span class="line">  <span class="string">`cust_level`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'客户级别'</span>,</span><br><span class="line">  <span class="string">`cust_phone`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'固定电话'</span>,</span><br><span class="line">  <span class="string">`cust_mobile`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'移动电话'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`cust_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure></li><li><p>创建实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Long cust_id;</span><br><span class="line"><span class="keyword">private</span> String cust_name;</span><br><span class="line"><span class="keyword">private</span> String cust_source;</span><br><span class="line"><span class="keyword">private</span> String cust_industry;</span><br><span class="line"><span class="keyword">private</span> String cust_level;</span><br><span class="line"><span class="keyword">private</span> String cust_phone;</span><br><span class="line"><span class="keyword">private</span> String cust_mobile;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getCust_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_id</span><span class="params">(Long cust_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_id = cust_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_name</span><span class="params">(String cust_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_name = cust_name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_source</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_source;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_source</span><span class="params">(String cust_source)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_source = cust_source;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_industry</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_industry;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_industry</span><span class="params">(String cust_industry)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_industry = cust_industry;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_level</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_level</span><span class="params">(String cust_level)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_level = cust_level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_phone</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_phone;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_phone</span><span class="params">(String cust_phone)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_phone = cust_phone;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCust_mobile</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cust_mobile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCust_mobile</span><span class="params">(String cust_mobile)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cust_mobile = cust_mobile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Customer [cust_id="</span> + cust_id + <span class="string">", cust_name="</span> + cust_name + <span class="string">", cust_source="</span> + cust_source</span><br><span class="line">+ <span class="string">", cust_industry="</span> + cust_industry + <span class="string">", cust_level="</span> + cust_level + <span class="string">", cust_phone="</span> + cust_phone</span><br><span class="line">+ <span class="string">", cust_mobile="</span> + cust_mobile + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>创建映射</strong></p><p>映射通过 XML 的配置文件完成，配置文件可以任意命名，但通常使用统一命名规范（类名.hbm.xml）[hbm : hibernate mapping]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE hibernate-mapping PUBLIC </span><br><span class="line">    &quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span><br><span class="line">    &quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;&gt;</span><br><span class="line">&lt;hibernate-mapping&gt;</span><br><span class="line">&lt;!-- 建立类与表的映射 --&gt;</span><br><span class="line">&lt;class name=&quot;com.test.hibernate.demo1.Customer&quot; table=&quot;cst_customer&quot;&gt;</span><br><span class="line">&lt;!-- 建立类中的属性与表中的主键对应 --&gt;</span><br><span class="line">&lt;id name=&quot;cust_id&quot; column=&quot;cust_id&quot; &gt;</span><br><span class="line">&lt;generator class=&quot;native&quot;/&gt;</span><br><span class="line">&lt;/id&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 建立类中的普通的属性和表的字段的对应 --&gt;</span><br><span class="line">&lt;property name=&quot;cust_name&quot; column=&quot;cust_name&quot; length=&quot;32&quot; /&gt;</span><br><span class="line">&lt;property name=&quot;cust_source&quot; column=&quot;cust_source&quot; length=&quot;32&quot;/&gt;</span><br><span class="line">&lt;property name=&quot;cust_industry&quot; column=&quot;cust_industry&quot;/&gt;</span><br><span class="line">&lt;property name=&quot;cust_level&quot; column=&quot;cust_level&quot;/&gt;</span><br><span class="line">&lt;property name=&quot;cust_phone&quot; column=&quot;cust_phone&quot;/&gt;</span><br><span class="line">&lt;property name=&quot;cust_mobile&quot; column=&quot;cust_mobile&quot;/&gt;</span><br><span class="line">&lt;/class&gt;</span><br><span class="line">&lt;/hibernate-mapping&gt;</span><br></pre></td></tr></table></figure></li><li><p>创建一个 Hibernate 核心配置文件</p><p>Hibernate 核心配置文件的名称：hibernate.cfg.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE hibernate-configuration PUBLIC</span><br><span class="line">&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</span><br><span class="line">&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;</span><br><span class="line">&lt;hibernate-configuration&gt;</span><br><span class="line">&lt;session-factory&gt;</span><br><span class="line">&lt;!-- 1. 连接数据库的基本参数 --&gt;</span><br><span class="line">&lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt;</span><br><span class="line">&lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:mysql:///hibernate_day01&lt;/property&gt;</span><br><span class="line">&lt;property name=&quot;hibernate.connection.username&quot;&gt;root&lt;/property&gt;</span><br><span class="line">&lt;property name=&quot;hibernate.connection.password&quot;&gt;1&lt;/property&gt;</span><br><span class="line">&lt;!-- 配置Hibernate的方言 --&gt;</span><br><span class="line">&lt;property name=&quot;hibernate.dialect&quot;&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 2. 可选配置 --&gt;</span><br><span class="line">&lt;!-- 打印SQL --&gt;</span><br><span class="line">&lt;property name=&quot;hibernate.show_sql&quot;&gt;true&lt;/property&gt;</span><br><span class="line">&lt;!-- 格式化SQL --&gt;</span><br><span class="line">&lt;property name=&quot;hibernate.format_sql&quot;&gt;true&lt;/property&gt;</span><br><span class="line">&lt;!-- 自动创建表 --&gt;</span><br><span class="line">&lt;property name=&quot;hibernate.hbm2ddl.auto&quot;&gt;update&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 3. 导入映射文件 --&gt;</span><br><span class="line">&lt;mapping resource=&quot;com/test/hibernate/demo1/Customer.hbm.xml&quot; /&gt;</span><br><span class="line">&lt;/session-factory&gt;</span><br><span class="line">&lt;/hibernate-configuration&gt;</span><br></pre></td></tr></table></figure></li><li><p>编写测试代码</p><p>保存客户 java 代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hibernate 的入门案例 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tong</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HibernateDemo1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 保存客户的案例</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 1.加载 Hibernate 核心配置文件</span></span><br><span class="line">Configuration configuration = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line"><span class="comment">// 手动加载映射</span></span><br><span class="line"><span class="comment">//configuration.addResource("com/test/hibernate/demo1/Customer.hbm.xml");</span></span><br><span class="line"><span class="comment">// 2.创建一个 SessionFactory 对象，类似于 JDBC 的连接池</span></span><br><span class="line">SessionFactory SessionFactory = configuration.buildSessionFactory();</span><br><span class="line"><span class="comment">// 3.通过 SessionFactory 对象获得一个 Session 对象，相当于 JDBC 中的 Connection</span></span><br><span class="line">Session session = SessionFactory.openSession();</span><br><span class="line"><span class="comment">// 4.手动开启事务</span></span><br><span class="line">Transaction transaction = session.beginTransaction();</span><br><span class="line"><span class="comment">// 5.编写代码</span></span><br><span class="line"></span><br><span class="line">Customer customer = <span class="keyword">new</span> Customer();</span><br><span class="line">customer.setCust_name(<span class="string">"赵六"</span>);</span><br><span class="line">session.save(customer);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 6.提交事务</span></span><br><span class="line">transaction.commit();</span><br><span class="line"><span class="comment">// 7.释放资源</span></span><br><span class="line">session.close();</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据库表</p><p><img src="http://pifu006nk.bkt.clouddn.com/blog/20181121/liNCVivGbQyl.png?imageslim" alt="mark"></p></li></ol><h2 id="Hibernate-的常见配置"><a href="#Hibernate-的常见配置" class="headerlink" title="Hibernate 的常见配置"></a>Hibernate 的常见配置</h2><h3 id="XML-提示配置"><a href="#XML-提示配置" class="headerlink" title="XML 提示配置"></a>XML 提示配置</h3><p><img src="http://pifu006nk.bkt.clouddn.com/blog/20181121/SBqVUrQ3qYoT.png?imageslim" alt="mark"></p><p><img src="http://pifu006nk.bkt.clouddn.com/blog/20181121/ok7u0rK5SSqs.png?imageslim" alt="mark"></p><h3 id="Hibernate-映射文件的配置"><a href="#Hibernate-映射文件的配置" class="headerlink" title="Hibernate 映射文件的配置"></a>Hibernate 映射文件的配置</h3><ul><li><p>class 标签的配置</p><p>class 标签用来建立类与表的映射关系</p><p>常用属性：</p><p>​    name：类的全路径</p><p>​    table：表名（类名与表名一致时，table 可以省略）</p></li><li><p>id 标签的配置</p><p>id 标签用来建立类中属性与表中主键的对应关系</p><p>常用属性：</p><p>​    name：类中的属性名</p><p>​    column：表中的字段名（类中的属性名与表中的字段名一致时，column 属性可以省略）</p><p>​    length：长度</p><p>​    type：类型</p></li><li><p>property 标签的配置</p><p>property 标签用来建立类中的普通属性与表中字段的对应关系</p><p>常用属性：</p><p>​    name：类中的属性名</p><p>​    column：表中的字段名</p><p>​    length：长度</p><p>​    type：类型</p><p>​    not-null：设置非空</p><p>​    unique：设置唯一</p></li></ul><h3 id="Hibernate-的核心配置"><a href="#Hibernate-的核心配置" class="headerlink" title="Hibernate 的核心配置"></a>Hibernate 的核心配置</h3><blockquote><p>可以分为三部分</p></blockquote><ul><li><p>必须的配置</p><ul><li><p>连接数据库的基本参数</p><p> 驱动类、url 路径、用户名、密码</p></li><li><p>方言</p></li></ul></li><li><p>可选的配置</p><ul><li><p>显示 SQL：hibernate.show_sql</p></li><li><p>格式化 SQL：hibernate.format_sql</p></li><li><p>自动建表：hibernate.hbm2ddl.auto</p><ul><li><p>取值</p><p>none：不使用 hibernate 的自动建表</p><p>ceate：如果数据库中有表，删除原有表，重新创建，如果没有表，则新建表</p><p>create-drop：如果数据库中有表，删除原有表新建表，执行操作后再删除表。如果没有表，则新建表，使用完后再删除该表</p><p>update：如果数据库中有表，使用原有表（update 会该表表结构），如果没有表，则创建新表</p><p>validate：如果数据库中没有表，不会创建表，如果有表，则会校验映射和表结构</p></li></ul></li></ul></li><li><p>映射文件的引入</p><p>引入映射文件的位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mapping resource=&quot;com/test/hibernate/demo1/Customer.hbm.xml&quot; /&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Hibernate-的核心-API"><a href="#Hibernate-的核心-API" class="headerlink" title="Hibernate 的核心 API"></a>Hibernate 的核心 API</h2><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><ul><li><p>Hibernate 的配置对象</p></li><li><p>作用</p><ol><li><p>加载核心配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Configuration configuration = <span class="keyword">new</span> Configuration().configure();</span><br></pre></td></tr></table></figure></li><li><p>可手动加载映射文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configuration.addResource(<span class="string">"com/test/hibernate/demo1/Customer.hbm.xml"</span>);</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="SessionFactory"><a href="#SessionFactory" class="headerlink" title="SessionFactory"></a>SessionFactory</h3><ul><li><p>Session 工厂，SessionFactory 内部维护了 Hibernate 的连接池和 Hibernate 的二级缓存，是线程安全的对象，其次一个项目创建一个对象即可。</p></li><li><p>配置连接池</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 配置C3P0连接池 --&gt;</span><br><span class="line">&lt;property name=&quot;connection.provider_class&quot;&gt;org.hibernate.connection.C3P0ConnectionProvider&lt;/property&gt;</span><br><span class="line">&lt;!--在连接池中可用的数据库连接的最少数目 --&gt;</span><br><span class="line">&lt;property name=&quot;c3p0.min_size&quot;&gt;5&lt;/property&gt;</span><br><span class="line">&lt;!--在连接池中所有数据库连接的最大数目  --&gt;</span><br><span class="line">&lt;property name=&quot;c3p0.max_size&quot;&gt;20&lt;/property&gt;</span><br><span class="line">&lt;!--设定数据库连接的过期时间,以秒为单位,</span><br><span class="line">如果连接池中的某个数据库连接处于空闲状态的时间超过了timeout时间,就会从连接池中清除 --&gt;</span><br><span class="line">&lt;property name=&quot;c3p0.timeout&quot;&gt;120&lt;/property&gt;</span><br><span class="line">&lt;!--每3000秒检查所有连接池中的空闲连接 以秒为单位--&gt;</span><br><span class="line">&lt;property name=&quot;c3p0.idle_test_period&quot;&gt;3000&lt;/property&gt;</span><br></pre></td></tr></table></figure></li><li><p>抽取 Hibernate 工具类，方便使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hibernate 的工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tong</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HibernateUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 Configuration 对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Configuration cfg;</span><br><span class="line"><span class="comment">// 创建 SessionFactory 对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> SessionFactory sf;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给两个变量赋值</span></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">sf = cfg.buildSessionFactory();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对外提供公共的方法获得连接对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Session <span class="title">openSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sf.openSession();</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><ul><li><p>Session 代表的是 Hibernate 与数据库的连接对象，是与数据库交互的桥梁，不同于 HttpSession，它是线程不安全的，所以一般在局部使用。</p></li><li><p>Session 中的 API</p><ul><li><p>保存方法</p><p><code>session.save(Object)</code>返回值是一个<code>Serializable id</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 保存客户</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获得 Session 连接对象</span></span><br><span class="line">    Session session = HibernateUtils.openSession();</span><br><span class="line">    <span class="comment">// 手动开启事务</span></span><br><span class="line">    Transaction transaction = session.beginTransaction();</span><br><span class="line">    <span class="comment">// 编写代码</span></span><br><span class="line">    Customer customer = <span class="keyword">new</span> Customer();</span><br><span class="line">    customer.setCust_name(<span class="string">"张三"</span>);</span><br><span class="line">    session.save(customer);</span><br><span class="line">    <span class="comment">// 提交事务</span></span><br><span class="line">    transaction.commit();</span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查询方法</p><p><code>T get(Class c, Serializable id)</code></p><p><code>T load(Class c, Serialzable id)</code></p><p><strong>get 方法和 load 方法的区别？</strong></p><ul><li><p>get 方法</p><p>get 方法是立即加载，当执行到 get() 方法这行代码时，会立即发送 SQL 语句去查询</p><p>查询之后是真实对象本身</p><p>当查询一个不存在的对象时，返回的结果是 null</p></li><li><p>load 方法</p><p>load 方法是延时加载（懒加载），当执行到 load() 方法这行代码时，不会发送 SQL 语句去查询，直到调用该对象时才会发送 SQL 语句去查询</p><p>查询之后是通过第三方 javassist 技术处理的代理对象</p><p>当查询一个不存在的对象时，会抛出 ObjectNotFoundException 异常</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 查询客户</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.openSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 get 方法查询</span></span><br><span class="line">    Customer customer = session.get(Customer.class, <span class="number">1L</span>);</span><br><span class="line">    System.out.println(customer);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 load 方法查询</span></span><br><span class="line">    <span class="comment">/*Customer customer = session.load(Customer.class, 2l);</span></span><br><span class="line"><span class="comment">System.out.println(customer);*/</span></span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改方法</p><p><code>void update(Object obj)</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 修改操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.openSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 直接创建对象修改</span></span><br><span class="line">    <span class="comment">/*Customer customer = new Customer();</span></span><br><span class="line"><span class="comment">customer.setCust_id(1l);</span></span><br><span class="line"><span class="comment">customer.setCust_name("王五");;</span></span><br><span class="line"><span class="comment">session.update(customer);*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 先查询，再修改(推荐)</span></span><br><span class="line">    Customer customer = session.get(Customer.class, <span class="number">1l</span>);</span><br><span class="line">    customer.setCust_name(<span class="string">"赵六"</span>);</span><br><span class="line">    session.update(customer);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>删除方法</p><p><code>void delete(Object obj)</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 删除操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.openSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建对象直接删除</span></span><br><span class="line">    <span class="comment">/*Customer customer = new Customer();</span></span><br><span class="line"><span class="comment">customer.setCust_id(2l);</span></span><br><span class="line"><span class="comment">session.delete(customer);*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 先查询，再删除(推荐) -- 多表关系时可以实现级联删除</span></span><br><span class="line">    Customer customer = session.get(Customer.class, <span class="number">3l</span>);</span><br><span class="line">    session.delete(customer);</span><br><span class="line"></span><br><span class="line">    tx.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>保存或更新</p><p><code>void saveOrUpdate(Object obj)</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 保存或更新</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.openSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 表中没有此数据，保存</span></span><br><span class="line">    <span class="comment">/*Customer customer = new Customer();</span></span><br><span class="line"><span class="comment">customer.setCust_name("赵二");</span></span><br><span class="line"><span class="comment">session.saveOrUpdate(customer);*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 表中有此数据，更新</span></span><br><span class="line">    Customer customer = <span class="keyword">new</span> Customer();</span><br><span class="line">    customer.setCust_id(<span class="number">2l</span>);</span><br><span class="line">    customer.setCust_name(<span class="string">"天一"</span>);</span><br><span class="line">    session.saveOrUpdate(customer);</span><br><span class="line">    tx.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查询所有</p><p>通过 HQL createQuery 和 SQL createSQLQuery 查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 查询所有</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Session session = HibernateUtils.openSession();</span><br><span class="line">    Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接收 HQL，hibernate query language</span></span><br><span class="line">    <span class="comment">/*Query query = session.createQuery("from Customer");</span></span><br><span class="line"><span class="comment">List&lt;Customer&gt; list = query.list();</span></span><br><span class="line"><span class="comment">for (Customer customer : list) &#123;</span></span><br><span class="line"><span class="comment">System.out.println(customer.toString());</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接收 SQL</span></span><br><span class="line">    SQLQuery query = session.createSQLQuery(<span class="string">"select * from cst_customer"</span>);</span><br><span class="line">    List&lt;Object[]&gt; list = query.list();</span><br><span class="line">    <span class="keyword">for</span> (Object[] objects : list) &#123;</span><br><span class="line">        <span class="comment">// 对象数组以字符串形式打印输出</span></span><br><span class="line">        System.out.println(Arrays.toString(objects));</span><br><span class="line">    &#125;</span><br><span class="line">    tx.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Transaction </p><ul><li><p>事务对象</p></li><li><p>常用 API</p><p><code>commit():提交事务</code></p><p><code>rollback():回滚事务</code></p></li></ul></li></ul><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><p>通过以上知识的学习能够独立搭建 Hibernate 的开发环境完成 CRUD 操作即可。</p>]]></content>
    
    <summary type="html">
    
      Hibernate 基础篇（一），我们一起学习 Hibernate。
    
    </summary>
    
      <category term="Java" scheme="hellotong.ml/categories/Java/"/>
    
    
      <category term="Java" scheme="hellotong.ml/tags/Java/"/>
    
      <category term="Hibernate" scheme="hellotong.ml/tags/Hibernate/"/>
    
  </entry>
  
  <entry>
    <title>my first blog</title>
    <link href="hellotong.ml/my-first-blog/"/>
    <id>hellotong.ml/my-first-blog/</id>
    <published>2018-11-19T04:17:55.000Z</published>
    <updated>2018-11-22T11:25:52.027Z</updated>
    
    <content type="html"><![CDATA[<h1 id="This-is-my-first-blog"><a href="#This-is-my-first-blog" class="headerlink" title="This is my first blog."></a>This is my first blog.</h1><p>Hello, everyone!</p><blockquote><p>This is my first blog!</p></blockquote><p><code>java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hibernate 的其他 API</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tong</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HibernateDemo5</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// Query</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单查询/查询所有</span></span><br><span class="line"><span class="comment">// 通过 Session 获得 Query 接口，HQL：hibernate query language</span></span><br><span class="line"><span class="comment">/* String hql = "from Customer";</span></span><br><span class="line"><span class="comment">Query query = session.createQuery(hql);*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 条件查询</span></span><br><span class="line"><span class="comment">/*String hql = "from Customer where cust_name like ?";</span></span><br><span class="line"><span class="comment">Query query = session.createQuery(hql);</span></span><br><span class="line"><span class="comment">// 设置条件</span></span><br><span class="line"><span class="comment">query.setParameter(0, "张%");// 在 hibernate 中 0 代表第一个问号*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 分页查询</span></span><br><span class="line">String hql = <span class="string">"from Customer"</span>;</span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line"><span class="comment">// 设置分页</span></span><br><span class="line">query.setFirstResult(<span class="number">0</span>);<span class="comment">// 从第一条数据开始</span></span><br><span class="line">query.setMaxResults(<span class="number">3</span>);<span class="comment">// 每页显示 3 条数据</span></span><br><span class="line"></span><br><span class="line">List&lt;Customer&gt; list = query.list();</span><br><span class="line"><span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">System.out.println(customer);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tx.commit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// Criteria</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 Session 获得 Criteria 接口</span></span><br><span class="line">Criteria criteria = session.createCriteria(Customer.class);</span><br><span class="line"><span class="comment">// 简单查询/查询所有</span></span><br><span class="line"><span class="comment">// List&lt;Customer&gt; list = criteria.list();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 条件查询</span></span><br><span class="line"><span class="comment">/*criteria.add(Restrictions.like("cust_name", "张", MatchMode.START));// 匹配名字开头是张的数据</span></span><br><span class="line"><span class="comment">List&lt;Customer&gt; list = criteria.list();*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 分页查询</span></span><br><span class="line">criteria.setFirstResult(<span class="number">3</span>);</span><br><span class="line">criteria.setMaxResults(<span class="number">3</span>);</span><br><span class="line">List&lt;Customer&gt; list = criteria.list();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">System.out.println(customer);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tx.commit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// SQLQuery</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Session session = HibernateUtils.getCurrentSession();</span><br><span class="line">Transaction tx = session.beginTransaction();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单查询/查询所有</span></span><br><span class="line"><span class="comment">/*String sql = "select * from cst_customer";</span></span><br><span class="line"><span class="comment">SQLQuery query = session.createSQLQuery(sql);*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 条件查询</span></span><br><span class="line"><span class="comment">/*String sql = "select * from cst_customer where cust_name=?";</span></span><br><span class="line"><span class="comment">SQLQuery query = session.createSQLQuery(sql);</span></span><br><span class="line"><span class="comment">// 设置条件</span></span><br><span class="line"><span class="comment">query.setParameter(0, "哈哈");*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 分页查询</span></span><br><span class="line">String sql = <span class="string">"select * from cst_customer limit ?, ?"</span>;</span><br><span class="line">SQLQuery query = session.createSQLQuery(sql);</span><br><span class="line"><span class="comment">// 设置分页</span></span><br><span class="line">query.setParameter(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">query.setParameter(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">List&lt;Object[]&gt; list = query.list();</span><br><span class="line"><span class="keyword">for</span> (Object[] objects : list) &#123;</span><br><span class="line">System.out.println(Arrays.toString(objects));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tx.commit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      This is my first blog！
    
    </summary>
    
    
  </entry>
  
</feed>
